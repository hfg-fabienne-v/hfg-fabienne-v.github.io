{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/fabienne/studium/praxissemester/portfolio/fabienne.vatter/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport ResizeObserver from 'resize-observer-polyfill';\nimport isServer from './isServer';\n\nvar resizeHandler = function resizeHandler(entries) {\n  var _iterator = _createForOfIteratorHelper(entries),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var entry = _step.value;\n      var listeners = entry.target.__resizeListeners__ || [];\n\n      if (listeners.length) {\n        listeners.forEach(function (fn) {\n          fn();\n        });\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n};\n\nvar addResizeListener = function addResizeListener(element, fn) {\n  if (isServer || !element) return;\n\n  if (!element.__resizeListeners__) {\n    element.__resizeListeners__ = [];\n    element.__ro__ = new ResizeObserver(resizeHandler);\n\n    element.__ro__.observe(element);\n  }\n\n  element.__resizeListeners__.push(fn);\n};\n\nvar removeResizeListener = function removeResizeListener(element, fn) {\n  if (!element || !element.__resizeListeners__) return;\n\n  element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n  if (!element.__resizeListeners__.length) {\n    element.__ro__.disconnect();\n  }\n};\n\nexport { addResizeListener, removeResizeListener };","map":{"version":3,"sources":["/Users/fabienne/studium/praxissemester/portfolio/fabienne.vatter/node_modules/element-plus/es/utils/resize-event.js"],"names":["ResizeObserver","isServer","resizeHandler","entries","entry","listeners","target","__resizeListeners__","length","forEach","fn","addResizeListener","element","__ro__","observe","push","removeResizeListener","splice","indexOf","disconnect"],"mappings":";;;;AAAA,OAAOA,cAAP,MAA2B,0BAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAUC,OAAV,EAAmB;AAAA,6CACjBA,OADiB;AAAA;;AAAA;AACrC,wDAA6B;AAAA,UAAlBC,KAAkB;AACzB,UAAMC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAaC,mBAAb,IAAoC,EAAtD;;AACA,UAAIF,SAAS,CAACG,MAAd,EAAsB;AAClBH,QAAAA,SAAS,CAACI,OAAV,CAAkB,UAAAC,EAAE,EAAI;AACpBA,UAAAA,EAAE;AACL,SAFD;AAGH;AACJ;AARoC;AAAA;AAAA;AAAA;AAAA;AASxC,CATD;;AAUA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAUC,OAAV,EAAmBF,EAAnB,EAAuB;AAC7C,MAAIT,QAAQ,IAAI,CAACW,OAAjB,EACI;;AACJ,MAAI,CAACA,OAAO,CAACL,mBAAb,EAAkC;AAC9BK,IAAAA,OAAO,CAACL,mBAAR,GAA8B,EAA9B;AACAK,IAAAA,OAAO,CAACC,MAAR,GAAiB,IAAIb,cAAJ,CAAmBE,aAAnB,CAAjB;;AACAU,IAAAA,OAAO,CAACC,MAAR,CAAeC,OAAf,CAAuBF,OAAvB;AACH;;AACDA,EAAAA,OAAO,CAACL,mBAAR,CAA4BQ,IAA5B,CAAiCL,EAAjC;AACH,CATD;;AAUA,IAAMM,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAUJ,OAAV,EAAmBF,EAAnB,EAAuB;AAChD,MAAI,CAACE,OAAD,IAAY,CAACA,OAAO,CAACL,mBAAzB,EACI;;AACJK,EAAAA,OAAO,CAACL,mBAAR,CAA4BU,MAA5B,CAAmCL,OAAO,CAACL,mBAAR,CAA4BW,OAA5B,CAAoCR,EAApC,CAAnC,EAA4E,CAA5E;;AACA,MAAI,CAACE,OAAO,CAACL,mBAAR,CAA4BC,MAAjC,EAAyC;AACrCI,IAAAA,OAAO,CAACC,MAAR,CAAeM,UAAf;AACH;AACJ,CAPD;;AASA,SAASR,iBAAT,EAA4BK,oBAA5B","sourcesContent":["import ResizeObserver from 'resize-observer-polyfill';\nimport isServer from './isServer';\n\nconst resizeHandler = function (entries) {\r\n    for (const entry of entries) {\r\n        const listeners = entry.target.__resizeListeners__ || [];\r\n        if (listeners.length) {\r\n            listeners.forEach(fn => {\r\n                fn();\r\n            });\r\n        }\r\n    }\r\n};\r\nconst addResizeListener = function (element, fn) {\r\n    if (isServer || !element)\r\n        return;\r\n    if (!element.__resizeListeners__) {\r\n        element.__resizeListeners__ = [];\r\n        element.__ro__ = new ResizeObserver(resizeHandler);\r\n        element.__ro__.observe(element);\r\n    }\r\n    element.__resizeListeners__.push(fn);\r\n};\r\nconst removeResizeListener = function (element, fn) {\r\n    if (!element || !element.__resizeListeners__)\r\n        return;\r\n    element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\r\n    if (!element.__resizeListeners__.length) {\r\n        element.__ro__.disconnect();\r\n    }\r\n};\n\nexport { addResizeListener, removeResizeListener };\n"]},"metadata":{},"sourceType":"module"}