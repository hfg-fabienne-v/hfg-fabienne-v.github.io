{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { defineComponent, ref, inject, computed, getCurrentInstance, withDirectives, openBlock, createBlock, renderSlot, vShow, createCommentVNode } from 'vue';\nvar script = defineComponent({\n  name: \"ElTabPane\",\n  props: {\n    label: {\n      type: String,\n      default: \"\"\n    },\n    name: {\n      type: String,\n      default: \"\"\n    },\n    closable: Boolean,\n    disabled: Boolean,\n    lazy: Boolean\n  },\n  setup: function setup(props) {\n    var index = ref(null);\n    var loaded = ref(false);\n    var rootTabs = inject(\"rootTabs\");\n    var updatePaneState = inject(\"updatePaneState\");\n\n    if (!rootTabs || !updatePaneState) {\n      throw new Error(\"ElTabPane must use with ElTabs\");\n    }\n\n    var isClosable = computed(function () {\n      return props.closable || rootTabs.props.closable;\n    });\n    var active = computed(function () {\n      var active2 = rootTabs.currentName.value === (props.name || index.value);\n\n      if (active2) {\n        loaded.value = true;\n      }\n\n      return active2;\n    });\n    var paneName = computed(function () {\n      return props.name || index.value;\n    });\n    var shouldBeRender = computed(function () {\n      return !props.lazy || loaded.value || active.value;\n    });\n    var instance = getCurrentInstance();\n    updatePaneState({\n      uid: instance.uid,\n      instance: instance,\n      props: props,\n      paneName: paneName,\n      active: active,\n      index: index,\n      isClosable: isClosable\n    });\n    return {\n      index: index,\n      loaded: loaded,\n      isClosable: isClosable,\n      active: active,\n      paneName: paneName,\n      shouldBeRender: shouldBeRender\n    };\n  }\n});\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _ctx.shouldBeRender ? withDirectives((openBlock(), createBlock(\"div\", {\n    key: 0,\n    id: \"pane-\".concat(_ctx.paneName),\n    class: \"el-tab-pane\",\n    role: \"tabpanel\",\n    \"aria-hidden\": !_ctx.active,\n    \"aria-labelledby\": \"tab-\".concat(_ctx.paneName)\n  }, [renderSlot(_ctx.$slots, \"default\")], 8, [\"id\", \"aria-hidden\", \"aria-labelledby\"])), [[vShow, _ctx.active]]) : createCommentVNode(\"v-if\", true);\n}\n\nscript.render = render;\nscript.__file = \"packages/tabs/src/tab-pane.vue\";\n\nscript.install = function (app) {\n  app.component(script.name, script);\n};\n\nvar _TabPane = script;\nexport default _TabPane;","map":{"version":3,"sources":["/Users/fabienne/studium/praxissemester/portfolio/fabienne.vatter/node_modules/element-plus/es/el-tab-pane/index.js"],"names":["defineComponent","ref","inject","computed","getCurrentInstance","withDirectives","openBlock","createBlock","renderSlot","vShow","createCommentVNode","script","name","props","label","type","String","default","closable","Boolean","disabled","lazy","setup","index","loaded","rootTabs","updatePaneState","Error","isClosable","active","active2","currentName","value","paneName","shouldBeRender","instance","uid","render","_ctx","_cache","$props","$setup","$data","$options","key","id","class","role","$slots","__file","install","app","component","_TabPane"],"mappings":"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","sourcesContent":["import { defineComponent, ref, inject, computed, getCurrentInstance, withDirectives, openBlock, createBlock, renderSlot, vShow, createCommentVNode } from 'vue';\n\nvar script = defineComponent({\n  name: \"ElTabPane\",\n  props: {\n    label: {\n      type: String,\n      default: \"\"\n    },\n    name: {\n      type: String,\n      default: \"\"\n    },\n    closable: Boolean,\n    disabled: Boolean,\n    lazy: Boolean\n  },\n  setup(props) {\n    const index = ref(null);\n    const loaded = ref(false);\n    const rootTabs = inject(\"rootTabs\");\n    const updatePaneState = inject(\"updatePaneState\");\n    if (!rootTabs || !updatePaneState) {\n      throw new Error(`ElTabPane must use with ElTabs`);\n    }\n    const isClosable = computed(() => {\n      return props.closable || rootTabs.props.closable;\n    });\n    const active = computed(() => {\n      const active2 = rootTabs.currentName.value === (props.name || index.value);\n      if (active2) {\n        loaded.value = true;\n      }\n      return active2;\n    });\n    const paneName = computed(() => {\n      return props.name || index.value;\n    });\n    const shouldBeRender = computed(() => {\n      return !props.lazy || loaded.value || active.value;\n    });\n    const instance = getCurrentInstance();\n    updatePaneState({\n      uid: instance.uid,\n      instance,\n      props,\n      paneName,\n      active,\n      index,\n      isClosable\n    });\n    return {\n      index,\n      loaded,\n      isClosable,\n      active,\n      paneName,\n      shouldBeRender\n    };\n  }\n});\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _ctx.shouldBeRender ? withDirectives((openBlock(), createBlock(\"div\", {\n    key: 0,\n    id: `pane-${_ctx.paneName}`,\n    class: \"el-tab-pane\",\n    role: \"tabpanel\",\n    \"aria-hidden\": !_ctx.active,\n    \"aria-labelledby\": `tab-${_ctx.paneName}`\n  }, [\n    renderSlot(_ctx.$slots, \"default\")\n  ], 8, [\"id\", \"aria-hidden\", \"aria-labelledby\"])), [\n    [vShow, _ctx.active]\n  ]) : createCommentVNode(\"v-if\", true);\n}\n\nscript.render = render;\nscript.__file = \"packages/tabs/src/tab-pane.vue\";\n\nscript.install = (app) => {\n  app.component(script.name, script);\n};\nconst _TabPane = script;\n\nexport default _TabPane;\n"]},"metadata":{},"sourceType":"module"}