{"ast":null,"code":"import _toConsumableArray from \"/Users/fabienne/studium/praxissemester/portfolio/fabienne.vatter/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"/Users/fabienne/studium/praxissemester/portfolio/fabienne.vatter/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _typeof from \"/Users/fabienne/studium/praxissemester/portfolio/fabienne.vatter/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport _classCallCheck from \"/Users/fabienne/studium/praxissemester/portfolio/fabienne.vatter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/fabienne/studium/praxissemester/portfolio/fabienne.vatter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.object.freeze.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { reactive, defineComponent, inject, h, provide, ref, getCurrentInstance, watch, nextTick, resolveComponent, withDirectives, openBlock, createBlock, withModifiers, createVNode, createCommentVNode, withCtx, Fragment, renderList, vShow, onMounted, onBeforeUnmount, onUpdated, computed, toDisplayString } from 'vue';\nimport ElCollapseTransition from '../el-collapse-transition';\nimport ElCheckbox from '../el-checkbox';\nimport mitt from 'mitt';\nimport { removeClass, addClass, on, off } from '../utils/dom';\nimport { EVENT_CODE } from '../utils/aria';\nimport { useLocaleInject } from '../hooks';\n/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\n\nvar EMPTY_OBJ = process.env.NODE_ENV !== 'production' ? Object.freeze({}) : {};\nvar EMPTY_ARR = process.env.NODE_ENV !== 'production' ? Object.freeze([]) : [];\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar hasOwn = function hasOwn(val, key) {\n  return hasOwnProperty.call(val, key);\n};\n\nvar NODE_KEY = \"$treeNodeId\";\n\nvar markNodeData = function markNodeData(node, data) {\n  if (!data || data[NODE_KEY]) return;\n  Object.defineProperty(data, NODE_KEY, {\n    value: node.id,\n    enumerable: false,\n    configurable: false,\n    writable: false\n  });\n};\n\nvar getNodeKey = function getNodeKey(key, data) {\n  if (!key) return data[NODE_KEY];\n  return data[key];\n};\n\nvar getChildState = function getChildState(node) {\n  var all = true;\n  var none = true;\n  var allWithoutDisable = true;\n\n  for (var i = 0, j = node.length; i < j; i++) {\n    var n = node[i];\n\n    if (n.checked !== true || n.indeterminate) {\n      all = false;\n\n      if (!n.disabled) {\n        allWithoutDisable = false;\n      }\n    }\n\n    if (n.checked !== false || n.indeterminate) {\n      none = false;\n    }\n  }\n\n  return {\n    all: all,\n    none: none,\n    allWithoutDisable: allWithoutDisable,\n    half: !all && !none\n  };\n};\n\nvar reInitChecked = function reInitChecked(node) {\n  if (node.childNodes.length === 0) return;\n\n  var _getChildState = getChildState(node.childNodes),\n      all = _getChildState.all,\n      none = _getChildState.none,\n      half = _getChildState.half;\n\n  if (all) {\n    node.checked = true;\n    node.indeterminate = false;\n  } else if (half) {\n    node.checked = false;\n    node.indeterminate = true;\n  } else if (none) {\n    node.checked = false;\n    node.indeterminate = false;\n  }\n\n  var parent = node.parent;\n  if (!parent || parent.level === 0) return;\n\n  if (!node.store.checkStrictly) {\n    reInitChecked(parent);\n  }\n};\n\nvar getPropertyFromData = function getPropertyFromData(node, prop) {\n  var props = node.store.props;\n  var data = node.data || {};\n  var config = props[prop];\n\n  if (typeof config === \"function\") {\n    return config(data, node);\n  } else if (typeof config === \"string\") {\n    return data[config];\n  } else if (typeof config === \"undefined\") {\n    var dataProp = data[prop];\n    return dataProp === void 0 ? \"\" : dataProp;\n  }\n};\n\nvar nodeIdSeed = 0;\n\nvar Node = /*#__PURE__*/function () {\n  function Node(options) {\n    _classCallCheck(this, Node);\n\n    this.id = nodeIdSeed++;\n    this.text = null;\n    this.checked = false;\n    this.indeterminate = false;\n    this.data = null;\n    this.expanded = false;\n    this.parent = null;\n    this.visible = true;\n    this.isCurrent = false;\n    this.canFocus = false;\n\n    for (var name in options) {\n      if (hasOwn(options, name)) {\n        this[name] = options[name];\n      }\n    }\n\n    this.level = 0;\n    this.loaded = false;\n    this.childNodes = [];\n    this.loading = false;\n\n    if (this.parent) {\n      this.level = this.parent.level + 1;\n    }\n  }\n\n  _createClass(Node, [{\n    key: \"initialize\",\n    value: function initialize() {\n      var store = this.store;\n\n      if (!store) {\n        throw new Error(\"[Node]store is required!\");\n      }\n\n      store.registerNode(this);\n      var props = store.props;\n\n      if (props && typeof props.isLeaf !== \"undefined\") {\n        var isLeaf = getPropertyFromData(this, \"isLeaf\");\n\n        if (typeof isLeaf === \"boolean\") {\n          this.isLeafByUser = isLeaf;\n        }\n      }\n\n      if (store.lazy !== true && this.data) {\n        this.setData(this.data);\n\n        if (store.defaultExpandAll) {\n          this.expanded = true;\n          this.canFocus = true;\n        }\n      } else if (this.level > 0 && store.lazy && store.defaultExpandAll) {\n        this.expand();\n      }\n\n      if (!Array.isArray(this.data)) {\n        markNodeData(this, this.data);\n      }\n\n      if (!this.data) return;\n      var defaultExpandedKeys = store.defaultExpandedKeys;\n      var key = store.key;\n\n      if (key && defaultExpandedKeys && defaultExpandedKeys.indexOf(this.key) !== -1) {\n        this.expand(null, store.autoExpandParent);\n      }\n\n      if (key && store.currentNodeKey !== void 0 && this.key === store.currentNodeKey) {\n        store.currentNode = this;\n        store.currentNode.isCurrent = true;\n      }\n\n      if (store.lazy) {\n        store._initDefaultCheckedNode(this);\n      }\n\n      this.updateLeafState();\n      if (this.parent && (this.level === 1 || this.parent.expanded === true)) this.canFocus = true;\n    }\n  }, {\n    key: \"setData\",\n    value: function setData(data) {\n      if (!Array.isArray(data)) {\n        markNodeData(this, data);\n      }\n\n      this.data = data;\n      this.childNodes = [];\n      var children;\n\n      if (this.level === 0 && this.data instanceof Array) {\n        children = this.data;\n      } else {\n        children = getPropertyFromData(this, \"children\") || [];\n      }\n\n      for (var i = 0, j = children.length; i < j; i++) {\n        this.insertChild({\n          data: children[i]\n        });\n      }\n    }\n  }, {\n    key: \"label\",\n    get: function get() {\n      return getPropertyFromData(this, \"label\");\n    }\n  }, {\n    key: \"key\",\n    get: function get() {\n      var nodeKey = this.store.key;\n      if (this.data) return this.data[nodeKey];\n      return null;\n    }\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      return getPropertyFromData(this, \"disabled\");\n    }\n  }, {\n    key: \"nextSibling\",\n    get: function get() {\n      var parent = this.parent;\n\n      if (parent) {\n        var index = parent.childNodes.indexOf(this);\n\n        if (index > -1) {\n          return parent.childNodes[index + 1];\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"previousSibling\",\n    get: function get() {\n      var parent = this.parent;\n\n      if (parent) {\n        var index = parent.childNodes.indexOf(this);\n\n        if (index > -1) {\n          return index > 0 ? parent.childNodes[index - 1] : null;\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"contains\",\n    value: function contains(target) {\n      var deep = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      return (this.childNodes || []).some(function (child) {\n        return child === target || deep && child.contains(target);\n      });\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      var parent = this.parent;\n\n      if (parent) {\n        parent.removeChild(this);\n      }\n    }\n  }, {\n    key: \"insertChild\",\n    value: function insertChild(child, index, batch) {\n      if (!child) throw new Error(\"insertChild error: child is required.\");\n\n      if (!(child instanceof Node)) {\n        if (!batch) {\n          var children = this.getChildren(true);\n\n          if (children.indexOf(child.data) === -1) {\n            if (typeof index === \"undefined\" || index < 0) {\n              children.push(child.data);\n            } else {\n              children.splice(index, 0, child.data);\n            }\n          }\n        }\n\n        Object.assign(child, {\n          parent: this,\n          store: this.store\n        });\n        child = reactive(new Node(child));\n\n        if (child instanceof Node) {\n          child.initialize();\n        }\n      }\n\n      child.level = this.level + 1;\n\n      if (typeof index === \"undefined\" || index < 0) {\n        this.childNodes.push(child);\n      } else {\n        this.childNodes.splice(index, 0, child);\n      }\n\n      this.updateLeafState();\n    }\n  }, {\n    key: \"insertBefore\",\n    value: function insertBefore(child, ref) {\n      var index;\n\n      if (ref) {\n        index = this.childNodes.indexOf(ref);\n      }\n\n      this.insertChild(child, index);\n    }\n  }, {\n    key: \"insertAfter\",\n    value: function insertAfter(child, ref) {\n      var index;\n\n      if (ref) {\n        index = this.childNodes.indexOf(ref);\n        if (index !== -1) index += 1;\n      }\n\n      this.insertChild(child, index);\n    }\n  }, {\n    key: \"removeChild\",\n    value: function removeChild(child) {\n      var children = this.getChildren() || [];\n      var dataIndex = children.indexOf(child.data);\n\n      if (dataIndex > -1) {\n        children.splice(dataIndex, 1);\n      }\n\n      var index = this.childNodes.indexOf(child);\n\n      if (index > -1) {\n        this.store && this.store.deregisterNode(child);\n        child.parent = null;\n        this.childNodes.splice(index, 1);\n      }\n\n      this.updateLeafState();\n    }\n  }, {\n    key: \"removeChildByData\",\n    value: function removeChildByData(data) {\n      var targetNode = null;\n\n      for (var i = 0; i < this.childNodes.length; i++) {\n        if (this.childNodes[i].data === data) {\n          targetNode = this.childNodes[i];\n          break;\n        }\n      }\n\n      if (targetNode) {\n        this.removeChild(targetNode);\n      }\n    }\n  }, {\n    key: \"expand\",\n    value: function expand(callback, expandParent) {\n      var _this = this;\n\n      var done = function done() {\n        if (expandParent) {\n          var parent = _this.parent;\n\n          while (parent.level > 0) {\n            parent.expanded = true;\n            parent = parent.parent;\n          }\n        }\n\n        _this.expanded = true;\n        if (callback) callback();\n\n        _this.childNodes.forEach(function (item) {\n          item.canFocus = true;\n        });\n      };\n\n      if (this.shouldLoadData()) {\n        this.loadData(function (data) {\n          if (Array.isArray(data)) {\n            if (_this.checked) {\n              _this.setChecked(true, true);\n            } else if (!_this.store.checkStrictly) {\n              reInitChecked(_this);\n            }\n\n            done();\n          }\n        });\n      } else {\n        done();\n      }\n    }\n  }, {\n    key: \"doCreateChildren\",\n    value: function doCreateChildren(array) {\n      var _this2 = this;\n\n      var defaultProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      array.forEach(function (item) {\n        _this2.insertChild(Object.assign({\n          data: item\n        }, defaultProps), void 0, true);\n      });\n    }\n  }, {\n    key: \"collapse\",\n    value: function collapse() {\n      this.expanded = false;\n      this.childNodes.forEach(function (item) {\n        item.canFocus = false;\n      });\n    }\n  }, {\n    key: \"shouldLoadData\",\n    value: function shouldLoadData() {\n      return this.store.lazy === true && this.store.load && !this.loaded;\n    }\n  }, {\n    key: \"updateLeafState\",\n    value: function updateLeafState() {\n      if (this.store.lazy === true && this.loaded !== true && typeof this.isLeafByUser !== \"undefined\") {\n        this.isLeaf = this.isLeafByUser;\n        return;\n      }\n\n      var childNodes = this.childNodes;\n\n      if (!this.store.lazy || this.store.lazy === true && this.loaded === true) {\n        this.isLeaf = !childNodes || childNodes.length === 0;\n        return;\n      }\n\n      this.isLeaf = false;\n    }\n  }, {\n    key: \"setChecked\",\n    value: function setChecked(value, deep, recursion, passValue) {\n      var _this3 = this;\n\n      this.indeterminate = value === \"half\";\n      this.checked = value === true;\n      if (this.store.checkStrictly) return;\n\n      if (!(this.shouldLoadData() && !this.store.checkDescendants)) {\n        var _getChildState2 = getChildState(this.childNodes),\n            all = _getChildState2.all,\n            allWithoutDisable = _getChildState2.allWithoutDisable;\n\n        if (!this.isLeaf && !all && allWithoutDisable) {\n          this.checked = false;\n          value = false;\n        }\n\n        var handleDescendants = function handleDescendants() {\n          if (deep) {\n            var childNodes = _this3.childNodes;\n\n            for (var i = 0, j = childNodes.length; i < j; i++) {\n              var child = childNodes[i];\n              passValue = passValue || value !== false;\n              var isCheck = child.disabled ? child.checked : passValue;\n              child.setChecked(isCheck, deep, true, passValue);\n            }\n\n            var _getChildState3 = getChildState(childNodes),\n                half = _getChildState3.half,\n                all2 = _getChildState3.all;\n\n            if (!all2) {\n              _this3.checked = all2;\n              _this3.indeterminate = half;\n            }\n          }\n        };\n\n        if (this.shouldLoadData()) {\n          this.loadData(function () {\n            handleDescendants();\n            reInitChecked(_this3);\n          }, {\n            checked: value !== false\n          });\n          return;\n        } else {\n          handleDescendants();\n        }\n      }\n\n      var parent = this.parent;\n      if (!parent || parent.level === 0) return;\n\n      if (!recursion) {\n        reInitChecked(parent);\n      }\n    }\n  }, {\n    key: \"getChildren\",\n    value: function getChildren() {\n      var forceInit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      if (this.level === 0) return this.data;\n      var data = this.data;\n      if (!data) return null;\n      var props = this.store.props;\n      var children = \"children\";\n\n      if (props) {\n        children = props.children || \"children\";\n      }\n\n      if (data[children] === void 0) {\n        data[children] = null;\n      }\n\n      if (forceInit && !data[children]) {\n        data[children] = [];\n      }\n\n      return data[children];\n    }\n  }, {\n    key: \"updateChildren\",\n    value: function updateChildren() {\n      var _this4 = this;\n\n      var newData = this.getChildren() || [];\n      var oldData = this.childNodes.map(function (node) {\n        return node.data;\n      });\n      var newDataMap = {};\n      var newNodes = [];\n      newData.forEach(function (item, index) {\n        var key = item[NODE_KEY];\n        var isNodeExists = !!key && oldData.findIndex(function (data) {\n          return data[NODE_KEY] === key;\n        }) >= 0;\n\n        if (isNodeExists) {\n          newDataMap[key] = {\n            index: index,\n            data: item\n          };\n        } else {\n          newNodes.push({\n            index: index,\n            data: item\n          });\n        }\n      });\n\n      if (!this.store.lazy) {\n        oldData.forEach(function (item) {\n          if (!newDataMap[item[NODE_KEY]]) _this4.removeChildByData(item);\n        });\n      }\n\n      newNodes.forEach(function (_ref) {\n        var index = _ref.index,\n            data = _ref.data;\n\n        _this4.insertChild({\n          data: data\n        }, index);\n      });\n      this.updateLeafState();\n    }\n  }, {\n    key: \"loadData\",\n    value: function loadData(callback) {\n      var _this5 = this;\n\n      var defaultProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (this.store.lazy === true && this.store.load && !this.loaded && (!this.loading || Object.keys(defaultProps).length)) {\n        this.loading = true;\n\n        var resolve = function resolve(children) {\n          _this5.loaded = true;\n          _this5.loading = false;\n          _this5.childNodes = [];\n\n          _this5.doCreateChildren(children, defaultProps);\n\n          _this5.updateLeafState();\n\n          if (callback) {\n            callback.call(_this5, children);\n          }\n        };\n\n        this.store.load(this, resolve);\n      } else {\n        if (callback) {\n          callback.call(this);\n        }\n      }\n    }\n  }]);\n\n  return Node;\n}();\n\nvar TreeStore = /*#__PURE__*/function () {\n  function TreeStore(options) {\n    _classCallCheck(this, TreeStore);\n\n    this.currentNode = null;\n    this.currentNodeKey = null;\n\n    for (var option in options) {\n      if (hasOwn(options, option)) {\n        this[option] = options[option];\n      }\n    }\n\n    this.nodesMap = {};\n  }\n\n  _createClass(TreeStore, [{\n    key: \"initialize\",\n    value: function initialize() {\n      var _this6 = this;\n\n      this.root = new Node({\n        data: this.data,\n        store: this\n      });\n      this.root.initialize();\n\n      if (this.lazy && this.load) {\n        var loadFn = this.load;\n        loadFn(this.root, function (data) {\n          _this6.root.doCreateChildren(data);\n\n          _this6._initDefaultCheckedNodes();\n        });\n      } else {\n        this._initDefaultCheckedNodes();\n      }\n    }\n  }, {\n    key: \"filter\",\n    value: function filter(value) {\n      var filterNodeMethod = this.filterNodeMethod;\n      var lazy = this.lazy;\n\n      var traverse = function traverse(node) {\n        var childNodes = node.root ? node.root.childNodes : node.childNodes;\n        childNodes.forEach(function (child) {\n          child.visible = filterNodeMethod.call(child, value, child.data, child);\n          traverse(child);\n        });\n\n        if (!node.visible && childNodes.length) {\n          var allHidden = true;\n          allHidden = !childNodes.some(function (child) {\n            return child.visible;\n          });\n\n          if (node.root) {\n            node.root.visible = allHidden === false;\n          } else {\n            node.visible = allHidden === false;\n          }\n        }\n\n        if (!value) return;\n        if (node.visible && !node.isLeaf && !lazy) node.expand();\n      };\n\n      traverse(this);\n    }\n  }, {\n    key: \"setData\",\n    value: function setData(newVal) {\n      var instanceChanged = newVal !== this.root.data;\n\n      if (instanceChanged) {\n        this.root.setData(newVal);\n\n        this._initDefaultCheckedNodes();\n      } else {\n        this.root.updateChildren();\n      }\n    }\n  }, {\n    key: \"getNode\",\n    value: function getNode(data) {\n      if (data instanceof Node) return data;\n      var key = _typeof(data) !== \"object\" ? data : getNodeKey(this.key, data);\n      return this.nodesMap[key] || null;\n    }\n  }, {\n    key: \"insertBefore\",\n    value: function insertBefore(data, refData) {\n      var refNode = this.getNode(refData);\n      refNode.parent.insertBefore({\n        data: data\n      }, refNode);\n    }\n  }, {\n    key: \"insertAfter\",\n    value: function insertAfter(data, refData) {\n      var refNode = this.getNode(refData);\n      refNode.parent.insertAfter({\n        data: data\n      }, refNode);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(data) {\n      var node = this.getNode(data);\n\n      if (node && node.parent) {\n        if (node === this.currentNode) {\n          this.currentNode = null;\n        }\n\n        node.parent.removeChild(node);\n      }\n    }\n  }, {\n    key: \"append\",\n    value: function append(data, parentData) {\n      var parentNode = parentData ? this.getNode(parentData) : this.root;\n\n      if (parentNode) {\n        parentNode.insertChild({\n          data: data\n        });\n      }\n    }\n  }, {\n    key: \"_initDefaultCheckedNodes\",\n    value: function _initDefaultCheckedNodes() {\n      var _this7 = this;\n\n      var defaultCheckedKeys = this.defaultCheckedKeys || [];\n      var nodesMap = this.nodesMap;\n      defaultCheckedKeys.forEach(function (checkedKey) {\n        var node = nodesMap[checkedKey];\n\n        if (node) {\n          node.setChecked(true, !_this7.checkStrictly);\n        }\n      });\n    }\n  }, {\n    key: \"_initDefaultCheckedNode\",\n    value: function _initDefaultCheckedNode(node) {\n      var defaultCheckedKeys = this.defaultCheckedKeys || [];\n\n      if (defaultCheckedKeys.indexOf(node.key) !== -1) {\n        node.setChecked(true, !this.checkStrictly);\n      }\n    }\n  }, {\n    key: \"setDefaultCheckedKey\",\n    value: function setDefaultCheckedKey(newVal) {\n      if (newVal !== this.defaultCheckedKeys) {\n        this.defaultCheckedKeys = newVal;\n\n        this._initDefaultCheckedNodes();\n      }\n    }\n  }, {\n    key: \"registerNode\",\n    value: function registerNode(node) {\n      var key = this.key;\n      if (!node || !node.data) return;\n\n      if (!key) {\n        this.nodesMap[node.id] = node;\n      } else {\n        var nodeKey = node.key;\n        if (nodeKey !== void 0) this.nodesMap[node.key] = node;\n      }\n    }\n  }, {\n    key: \"deregisterNode\",\n    value: function deregisterNode(node) {\n      var _this8 = this;\n\n      var key = this.key;\n      if (!key || !node || !node.data) return;\n      node.childNodes.forEach(function (child) {\n        _this8.deregisterNode(child);\n      });\n      delete this.nodesMap[node.key];\n    }\n  }, {\n    key: \"getCheckedNodes\",\n    value: function getCheckedNodes() {\n      var leafOnly = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var includeHalfChecked = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var checkedNodes = [];\n\n      var traverse = function traverse(node) {\n        var childNodes = node.root ? node.root.childNodes : node.childNodes;\n        childNodes.forEach(function (child) {\n          if ((child.checked || includeHalfChecked && child.indeterminate) && (!leafOnly || leafOnly && child.isLeaf)) {\n            checkedNodes.push(child.data);\n          }\n\n          traverse(child);\n        });\n      };\n\n      traverse(this);\n      return checkedNodes;\n    }\n  }, {\n    key: \"getCheckedKeys\",\n    value: function getCheckedKeys() {\n      var _this9 = this;\n\n      var leafOnly = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      return this.getCheckedNodes(leafOnly).map(function (data) {\n        return (data || {})[_this9.key];\n      });\n    }\n  }, {\n    key: \"getHalfCheckedNodes\",\n    value: function getHalfCheckedNodes() {\n      var nodes = [];\n\n      var traverse = function traverse(node) {\n        var childNodes = node.root ? node.root.childNodes : node.childNodes;\n        childNodes.forEach(function (child) {\n          if (child.indeterminate) {\n            nodes.push(child.data);\n          }\n\n          traverse(child);\n        });\n      };\n\n      traverse(this);\n      return nodes;\n    }\n  }, {\n    key: \"getHalfCheckedKeys\",\n    value: function getHalfCheckedKeys() {\n      var _this10 = this;\n\n      return this.getHalfCheckedNodes().map(function (data) {\n        return (data || {})[_this10.key];\n      });\n    }\n  }, {\n    key: \"_getAllNodes\",\n    value: function _getAllNodes() {\n      var allNodes = [];\n      var nodesMap = this.nodesMap;\n\n      for (var nodeKey in nodesMap) {\n        if (hasOwn(nodesMap, nodeKey)) {\n          allNodes.push(nodesMap[nodeKey]);\n        }\n      }\n\n      return allNodes;\n    }\n  }, {\n    key: \"updateChildren\",\n    value: function updateChildren(key, data) {\n      var node = this.nodesMap[key];\n      if (!node) return;\n      var childNodes = node.childNodes;\n\n      for (var i = childNodes.length - 1; i >= 0; i--) {\n        var child = childNodes[i];\n        this.remove(child.data);\n      }\n\n      for (var _i = 0, j = data.length; _i < j; _i++) {\n        var _child = data[_i];\n        this.append(_child, node.data);\n      }\n    }\n  }, {\n    key: \"_setCheckedKeys\",\n    value: function _setCheckedKeys(key) {\n      var leafOnly = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var checkedKeys = arguments.length > 2 ? arguments[2] : undefined;\n\n      var allNodes = this._getAllNodes().sort(function (a, b) {\n        return b.level - a.level;\n      });\n\n      var cache = Object.create(null);\n      var keys = Object.keys(checkedKeys);\n      allNodes.forEach(function (node) {\n        return node.setChecked(false, false);\n      });\n\n      for (var i = 0, j = allNodes.length; i < j; i++) {\n        var node = allNodes[i];\n        var nodeKey = node.data[key].toString();\n        var checked = keys.indexOf(nodeKey) > -1;\n\n        if (!checked) {\n          if (node.checked && !cache[nodeKey]) {\n            node.setChecked(false, false);\n          }\n\n          continue;\n        }\n\n        var parent = node.parent;\n\n        while (parent && parent.level > 0) {\n          cache[parent.data[key]] = true;\n          parent = parent.parent;\n        }\n\n        if (node.isLeaf || this.checkStrictly) {\n          node.setChecked(true, false);\n          continue;\n        }\n\n        node.setChecked(true, true);\n\n        if (leafOnly) {\n          (function () {\n            node.setChecked(false, false);\n\n            var traverse = function traverse(node2) {\n              var childNodes = node2.childNodes;\n              childNodes.forEach(function (child) {\n                if (!child.isLeaf) {\n                  child.setChecked(false, false);\n                }\n\n                traverse(child);\n              });\n            };\n\n            traverse(node);\n          })();\n        }\n      }\n    }\n  }, {\n    key: \"setCheckedNodes\",\n    value: function setCheckedNodes(array) {\n      var leafOnly = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var key = this.key;\n      var checkedKeys = {};\n      array.forEach(function (item) {\n        checkedKeys[(item || {})[key]] = true;\n      });\n\n      this._setCheckedKeys(key, leafOnly, checkedKeys);\n    }\n  }, {\n    key: \"setCheckedKeys\",\n    value: function setCheckedKeys(keys) {\n      var leafOnly = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      this.defaultCheckedKeys = keys;\n      var key = this.key;\n      var checkedKeys = {};\n      keys.forEach(function (key2) {\n        checkedKeys[key2] = true;\n      });\n\n      this._setCheckedKeys(key, leafOnly, checkedKeys);\n    }\n  }, {\n    key: \"setDefaultExpandedKeys\",\n    value: function setDefaultExpandedKeys(keys) {\n      var _this11 = this;\n\n      keys = keys || [];\n      this.defaultExpandedKeys = keys;\n      keys.forEach(function (key) {\n        var node = _this11.getNode(key);\n\n        if (node) node.expand(null, _this11.autoExpandParent);\n      });\n    }\n  }, {\n    key: \"setChecked\",\n    value: function setChecked(data, checked, deep) {\n      var node = this.getNode(data);\n\n      if (node) {\n        node.setChecked(!!checked, deep);\n      }\n    }\n  }, {\n    key: \"getCurrentNode\",\n    value: function getCurrentNode() {\n      return this.currentNode;\n    }\n  }, {\n    key: \"setCurrentNode\",\n    value: function setCurrentNode(currentNode) {\n      var prevCurrentNode = this.currentNode;\n\n      if (prevCurrentNode) {\n        prevCurrentNode.isCurrent = false;\n      }\n\n      this.currentNode = currentNode;\n      this.currentNode.isCurrent = true;\n    }\n  }, {\n    key: \"setUserCurrentNode\",\n    value: function setUserCurrentNode(node) {\n      var shouldAutoExpandParent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var key = node[this.key];\n      var currNode = this.nodesMap[key];\n      this.setCurrentNode(currNode);\n\n      if (shouldAutoExpandParent && this.currentNode.level > 1) {\n        this.currentNode.parent.expand(null, true);\n      }\n    }\n  }, {\n    key: \"setCurrentNodeKey\",\n    value: function setCurrentNodeKey(key) {\n      var shouldAutoExpandParent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      if (key === null || key === void 0) {\n        this.currentNode && (this.currentNode.isCurrent = false);\n        this.currentNode = null;\n        return;\n      }\n\n      var node = this.getNode(key);\n\n      if (node) {\n        this.setCurrentNode(node);\n\n        if (shouldAutoExpandParent && this.currentNode.level > 1) {\n          this.currentNode.parent.expand(null, true);\n        }\n      }\n    }\n  }]);\n\n  return TreeStore;\n}();\n\nvar script = defineComponent({\n  name: \"ElTreeNodeContent\",\n  props: {\n    node: {\n      type: Object,\n      required: true\n    },\n    renderContent: Function\n  },\n  setup: function setup(props) {\n    var nodeInstance = inject(\"NodeInstance\");\n    var tree = inject(\"RootTree\");\n    return function () {\n      var node = props.node;\n      var data = node.data,\n          store = node.store;\n      return props.renderContent ? props.renderContent(h, {\n        _self: nodeInstance,\n        node: node,\n        data: data,\n        store: store\n      }) : tree.ctx.slots.default ? tree.ctx.slots.default({\n        node: node,\n        data: data\n      }) : h(\"span\", {\n        class: \"el-tree-node__label\"\n      }, [node.label]);\n    };\n  }\n});\nscript.__file = \"packages/tree/src/tree-node-content.vue\";\n\nfunction useNodeExpandEventBroadcast(props) {\n  var parentNodeMap = inject(\"TreeNodeMap\", null);\n  var currentNodeMap = {\n    treeNodeExpand: function treeNodeExpand(node) {\n      if (props.node !== node) {\n        props.node.collapse();\n      }\n    },\n    children: []\n  };\n\n  if (parentNodeMap) {\n    parentNodeMap.children.push(currentNodeMap);\n  }\n\n  provide(\"TreeNodeMap\", currentNodeMap);\n  return {\n    broadcastExpanded: function broadcastExpanded(node) {\n      if (!props.accordion) return;\n\n      var _iterator = _createForOfIteratorHelper(currentNodeMap.children),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var childNode = _step.value;\n          childNode.treeNodeExpand(node);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  };\n}\n\nfunction useDragNodeHandler(_ref2) {\n  var props = _ref2.props,\n      ctx = _ref2.ctx,\n      el$ = _ref2.el$,\n      dropIndicator$ = _ref2.dropIndicator$,\n      store = _ref2.store;\n  var emitter = mitt();\n  provide(\"DragNodeEmitter\", emitter);\n  var dragState = ref({\n    showDropIndicator: false,\n    draggingNode: null,\n    dropNode: null,\n    allowDrop: true,\n    dropType: null\n  });\n  emitter.on(\"tree-node-drag-start\", function (_ref3) {\n    var event = _ref3.event,\n        treeNode = _ref3.treeNode;\n\n    if (typeof props.allowDrag === \"function\" && !props.allowDrag(treeNode.node)) {\n      event.preventDefault();\n      return false;\n    }\n\n    event.dataTransfer.effectAllowed = \"move\";\n\n    try {\n      event.dataTransfer.setData(\"text/plain\", \"\");\n    } catch (e) {}\n\n    dragState.value.draggingNode = treeNode;\n    ctx.emit(\"node-drag-start\", treeNode.node, event);\n  });\n  emitter.on(\"tree-node-drag-over\", function (_ref4) {\n    var event = _ref4.event,\n        treeNode = _ref4.treeNode;\n    var dropNode = treeNode;\n    var oldDropNode = dragState.value.dropNode;\n\n    if (oldDropNode && oldDropNode !== dropNode) {\n      removeClass(oldDropNode.$el, \"is-drop-inner\");\n    }\n\n    var draggingNode = dragState.value.draggingNode;\n    if (!draggingNode || !dropNode) return;\n    var dropPrev = true;\n    var dropInner = true;\n    var dropNext = true;\n    var userAllowDropInner = true;\n\n    if (typeof props.allowDrop === \"function\") {\n      dropPrev = props.allowDrop(draggingNode.node, dropNode.node, \"prev\");\n      userAllowDropInner = dropInner = props.allowDrop(draggingNode.node, dropNode.node, \"inner\");\n      dropNext = props.allowDrop(draggingNode.node, dropNode.node, \"next\");\n    }\n\n    event.dataTransfer.dropEffect = dropInner ? \"move\" : \"none\";\n\n    if ((dropPrev || dropInner || dropNext) && oldDropNode !== dropNode) {\n      if (oldDropNode) {\n        ctx.emit(\"node-drag-leave\", draggingNode.node, oldDropNode.node, event);\n      }\n\n      ctx.emit(\"node-drag-enter\", draggingNode.node, dropNode.node, event);\n    }\n\n    if (dropPrev || dropInner || dropNext) {\n      dragState.value.dropNode = dropNode;\n    }\n\n    if (dropNode.node.nextSibling === draggingNode.node) {\n      dropNext = false;\n    }\n\n    if (dropNode.node.previousSibling === draggingNode.node) {\n      dropPrev = false;\n    }\n\n    if (dropNode.node.contains(draggingNode.node, false)) {\n      dropInner = false;\n    }\n\n    if (draggingNode.node === dropNode.node || draggingNode.node.contains(dropNode.node)) {\n      dropPrev = false;\n      dropInner = false;\n      dropNext = false;\n    }\n\n    var targetPosition = dropNode.$el.getBoundingClientRect();\n    var treePosition = el$.value.getBoundingClientRect();\n    var dropType;\n    var prevPercent = dropPrev ? dropInner ? 0.25 : dropNext ? 0.45 : 1 : -1;\n    var nextPercent = dropNext ? dropInner ? 0.75 : dropPrev ? 0.55 : 0 : 1;\n    var indicatorTop = -9999;\n    var distance = event.clientY - targetPosition.top;\n\n    if (distance < targetPosition.height * prevPercent) {\n      dropType = \"before\";\n    } else if (distance > targetPosition.height * nextPercent) {\n      dropType = \"after\";\n    } else if (dropInner) {\n      dropType = \"inner\";\n    } else {\n      dropType = \"none\";\n    }\n\n    var iconPosition = dropNode.$el.querySelector(\".el-tree-node__expand-icon\").getBoundingClientRect();\n    var dropIndicator = dropIndicator$.value;\n\n    if (dropType === \"before\") {\n      indicatorTop = iconPosition.top - treePosition.top;\n    } else if (dropType === \"after\") {\n      indicatorTop = iconPosition.bottom - treePosition.top;\n    }\n\n    dropIndicator.style.top = indicatorTop + \"px\";\n    dropIndicator.style.left = iconPosition.right - treePosition.left + \"px\";\n\n    if (dropType === \"inner\") {\n      addClass(dropNode.$el, \"is-drop-inner\");\n    } else {\n      removeClass(dropNode.$el, \"is-drop-inner\");\n    }\n\n    dragState.value.showDropIndicator = dropType === \"before\" || dropType === \"after\";\n    dragState.value.allowDrop = dragState.value.showDropIndicator || userAllowDropInner;\n    dragState.value.dropType = dropType;\n    ctx.emit(\"node-drag-over\", draggingNode.node, dropNode.node, event);\n  });\n  emitter.on(\"tree-node-drag-end\", function (event) {\n    var _dragState$value = dragState.value,\n        draggingNode = _dragState$value.draggingNode,\n        dropType = _dragState$value.dropType,\n        dropNode = _dragState$value.dropNode;\n    event.preventDefault();\n    event.dataTransfer.dropEffect = \"move\";\n\n    if (draggingNode && dropNode) {\n      var draggingNodeCopy = {\n        data: draggingNode.node.data\n      };\n\n      if (dropType !== \"none\") {\n        draggingNode.node.remove();\n      }\n\n      if (dropType === \"before\") {\n        dropNode.node.parent.insertBefore(draggingNodeCopy, dropNode.node);\n      } else if (dropType === \"after\") {\n        dropNode.node.parent.insertAfter(draggingNodeCopy, dropNode.node);\n      } else if (dropType === \"inner\") {\n        dropNode.node.insertChild(draggingNodeCopy);\n      }\n\n      if (dropType !== \"none\") {\n        store.value.registerNode(draggingNodeCopy);\n      }\n\n      removeClass(dropNode.$el, \"is-drop-inner\");\n      ctx.emit(\"node-drag-end\", draggingNode.node, dropNode.node, dropType, event);\n\n      if (dropType !== \"none\") {\n        ctx.emit(\"node-drop\", draggingNode.node, dropNode.node, dropType, event);\n      }\n    }\n\n    if (draggingNode && !dropNode) {\n      ctx.emit(\"node-drag-end\", draggingNode.node, null, dropType, event);\n    }\n\n    dragState.value.showDropIndicator = false;\n    dragState.value.draggingNode = null;\n    dragState.value.dropNode = null;\n    dragState.value.allowDrop = true;\n  });\n  return {\n    dragState: dragState\n  };\n}\n\nfunction useDragNodeEmitter() {\n  var emitter = inject(\"DragNodeEmitter\");\n  return {\n    emitter: emitter\n  };\n}\n\nvar script$1 = defineComponent({\n  name: \"ElTreeNode\",\n  components: {\n    ElCollapseTransition: ElCollapseTransition,\n    ElCheckbox: ElCheckbox,\n    NodeContent: script\n  },\n  props: {\n    node: {\n      type: Node,\n      default: function _default() {\n        return {};\n      }\n    },\n    props: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    accordion: Boolean,\n    renderContent: Function,\n    renderAfterExpand: Boolean,\n    showCheckbox: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: [\"node-expand\"],\n  setup: function setup(props, ctx) {\n    var _useNodeExpandEventBr = useNodeExpandEventBroadcast(props),\n        broadcastExpanded = _useNodeExpandEventBr.broadcastExpanded;\n\n    var tree = inject(\"RootTree\");\n    var expanded = ref(false);\n    var childNodeRendered = ref(false);\n    var oldChecked = ref(null);\n    var oldIndeterminate = ref(null);\n    var node$ = ref(null);\n\n    var _useDragNodeEmitter = useDragNodeEmitter(),\n        emitter = _useDragNodeEmitter.emitter;\n\n    var instance = getCurrentInstance();\n    provide(\"NodeInstance\", instance);\n\n    if (!tree) {\n      console.warn(\"Can not find node's tree.\");\n    }\n\n    if (props.node.expanded) {\n      expanded.value = true;\n      childNodeRendered.value = true;\n    }\n\n    var childrenKey = tree.props[\"children\"] || \"children\";\n    watch(function () {\n      var children = props.node.data[childrenKey];\n      return children && _toConsumableArray(children);\n    }, function () {\n      props.node.updateChildren();\n    });\n    watch(function () {\n      return props.node.indeterminate;\n    }, function (val) {\n      handleSelectChange(props.node.checked, val);\n    });\n    watch(function () {\n      return props.node.checked;\n    }, function (val) {\n      handleSelectChange(val, props.node.indeterminate);\n    });\n    watch(function () {\n      return props.node.expanded;\n    }, function (val) {\n      nextTick(function () {\n        return expanded.value = val;\n      });\n\n      if (val) {\n        childNodeRendered.value = true;\n      }\n    });\n\n    var getNodeKey$1 = function getNodeKey$1(node) {\n      return getNodeKey(tree.props.nodeKey, node.data);\n    };\n\n    var handleSelectChange = function handleSelectChange(checked, indeterminate) {\n      if (oldChecked.value !== checked || oldIndeterminate.value !== indeterminate) {\n        tree.ctx.emit(\"check-change\", props.node.data, checked, indeterminate);\n      }\n\n      oldChecked.value = checked;\n      oldIndeterminate.value = indeterminate;\n    };\n\n    var handleClick = function handleClick() {\n      var store = tree.store.value;\n      store.setCurrentNode(props.node);\n      tree.ctx.emit(\"current-change\", store.currentNode ? store.currentNode.data : null, store.currentNode);\n      tree.currentNode.value = props.node;\n\n      if (tree.props.expandOnClickNode) {\n        handleExpandIconClick();\n      }\n\n      if (tree.props.checkOnClickNode && !props.node.disabled) {\n        handleCheckChange(null, {\n          target: {\n            checked: !props.node.checked\n          }\n        });\n      }\n\n      tree.ctx.emit(\"node-click\", props.node.data, props.node, instance);\n    };\n\n    var handleContextMenu = function handleContextMenu(event) {\n      if (tree.instance.vnode.props[\"onNodeContextmenu\"]) {\n        event.stopPropagation();\n        event.preventDefault();\n      }\n\n      tree.ctx.emit(\"node-contextmenu\", event, props.node.data, props.node, instance);\n    };\n\n    var handleExpandIconClick = function handleExpandIconClick() {\n      if (props.node.isLeaf) return;\n\n      if (expanded.value) {\n        tree.ctx.emit(\"node-collapse\", props.node.data, props.node, instance);\n        props.node.collapse();\n      } else {\n        props.node.expand();\n        ctx.emit(\"node-expand\", props.node.data, props.node, instance);\n      }\n    };\n\n    var handleCheckChange = function handleCheckChange(value, ev) {\n      props.node.setChecked(ev.target.checked, !tree.props.checkStrictly);\n      nextTick(function () {\n        var store = tree.store.value;\n        tree.ctx.emit(\"check\", props.node.data, {\n          checkedNodes: store.getCheckedNodes(),\n          checkedKeys: store.getCheckedKeys(),\n          halfCheckedNodes: store.getHalfCheckedNodes(),\n          halfCheckedKeys: store.getHalfCheckedKeys()\n        });\n      });\n    };\n\n    var handleChildNodeExpand = function handleChildNodeExpand(nodeData, node, instance2) {\n      broadcastExpanded(node);\n      tree.ctx.emit(\"node-expand\", nodeData, node, instance2);\n    };\n\n    var handleDragStart = function handleDragStart(event) {\n      if (!tree.props.draggable) return;\n      emitter.emit(\"tree-node-drag-start\", {\n        event: event,\n        treeNode: props\n      });\n    };\n\n    var handleDragOver = function handleDragOver(event) {\n      if (!tree.props.draggable) return;\n      emitter.emit(\"tree-node-drag-over\", {\n        event: event,\n        treeNode: {\n          $el: node$.value,\n          node: props.node\n        }\n      });\n      event.preventDefault();\n    };\n\n    var handleDrop = function handleDrop(event) {\n      event.preventDefault();\n    };\n\n    var handleDragEnd = function handleDragEnd(event) {\n      if (!tree.props.draggable) return;\n      emitter.emit(\"tree-node-drag-end\", event);\n    };\n\n    return {\n      node$: node$,\n      tree: tree,\n      expanded: expanded,\n      childNodeRendered: childNodeRendered,\n      oldChecked: oldChecked,\n      oldIndeterminate: oldIndeterminate,\n      emitter: emitter,\n      getNodeKey: getNodeKey$1,\n      handleSelectChange: handleSelectChange,\n      handleClick: handleClick,\n      handleContextMenu: handleContextMenu,\n      handleExpandIconClick: handleExpandIconClick,\n      handleCheckChange: handleCheckChange,\n      handleChildNodeExpand: handleChildNodeExpand,\n      handleDragStart: handleDragStart,\n      handleDragOver: handleDragOver,\n      handleDrop: handleDrop,\n      handleDragEnd: handleDragEnd\n    };\n  }\n});\nvar _hoisted_1 = {\n  key: 1,\n  class: \"el-tree-node__loading-icon el-icon-loading\"\n};\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_checkbox = resolveComponent(\"el-checkbox\");\n\n  var _component_node_content = resolveComponent(\"node-content\");\n\n  var _component_el_tree_node = resolveComponent(\"el-tree-node\");\n\n  var _component_el_collapse_transition = resolveComponent(\"el-collapse-transition\");\n\n  return withDirectives((openBlock(), createBlock(\"div\", {\n    ref: \"node$\",\n    class: [\"el-tree-node\", {\n      \"is-expanded\": _ctx.expanded,\n      \"is-current\": _ctx.node.isCurrent,\n      \"is-hidden\": !_ctx.node.visible,\n      \"is-focusable\": !_ctx.node.disabled,\n      \"is-checked\": !_ctx.node.disabled && _ctx.node.checked\n    }],\n    role: \"treeitem\",\n    tabindex: \"-1\",\n    \"aria-expanded\": _ctx.expanded,\n    \"aria-disabled\": _ctx.node.disabled,\n    \"aria-checked\": _ctx.node.checked,\n    draggable: _ctx.tree.props.draggable,\n    \"data-key\": _ctx.getNodeKey(_ctx.node),\n    onClick: _cache[3] || (_cache[3] = withModifiers(function () {\n      return _ctx.handleClick && _ctx.handleClick.apply(_ctx, arguments);\n    }, [\"stop\"])),\n    onContextmenu: _cache[4] || (_cache[4] = function () {\n      return _ctx.handleContextMenu && _ctx.handleContextMenu.apply(_ctx, arguments);\n    }),\n    onDragstart: _cache[5] || (_cache[5] = withModifiers(function () {\n      return _ctx.handleDragStart && _ctx.handleDragStart.apply(_ctx, arguments);\n    }, [\"stop\"])),\n    onDragover: _cache[6] || (_cache[6] = withModifiers(function () {\n      return _ctx.handleDragOver && _ctx.handleDragOver.apply(_ctx, arguments);\n    }, [\"stop\"])),\n    onDragend: _cache[7] || (_cache[7] = withModifiers(function () {\n      return _ctx.handleDragEnd && _ctx.handleDragEnd.apply(_ctx, arguments);\n    }, [\"stop\"])),\n    onDrop: _cache[8] || (_cache[8] = withModifiers(function () {\n      return _ctx.handleDrop && _ctx.handleDrop.apply(_ctx, arguments);\n    }, [\"stop\"]))\n  }, [createVNode(\"div\", {\n    class: \"el-tree-node__content\",\n    style: {\n      \"padding-left\": (_ctx.node.level - 1) * _ctx.tree.props.indent + \"px\"\n    }\n  }, [createVNode(\"span\", {\n    class: [{\n      \"is-leaf\": _ctx.node.isLeaf,\n      expanded: !_ctx.node.isLeaf && _ctx.expanded\n    }, \"el-tree-node__expand-icon\", _ctx.tree.props.iconClass ? _ctx.tree.props.iconClass : \"el-icon-caret-right\"],\n    onClick: _cache[1] || (_cache[1] = withModifiers(function () {\n      return _ctx.handleExpandIconClick && _ctx.handleExpandIconClick.apply(_ctx, arguments);\n    }, [\"stop\"]))\n  }, null, 2), _ctx.showCheckbox ? (openBlock(), createBlock(_component_el_checkbox, {\n    key: 0,\n    \"model-value\": _ctx.node.checked,\n    indeterminate: _ctx.node.indeterminate,\n    disabled: !!_ctx.node.disabled,\n    onClick: _cache[2] || (_cache[2] = withModifiers(function () {}, [\"stop\"])),\n    onChange: _ctx.handleCheckChange\n  }, null, 8, [\"model-value\", \"indeterminate\", \"disabled\", \"onChange\"])) : createCommentVNode(\"v-if\", true), _ctx.node.loading ? (openBlock(), createBlock(\"span\", _hoisted_1)) : createCommentVNode(\"v-if\", true), createVNode(_component_node_content, {\n    node: _ctx.node,\n    \"render-content\": _ctx.renderContent\n  }, null, 8, [\"node\", \"render-content\"])], 4), createVNode(_component_el_collapse_transition, null, {\n    default: withCtx(function () {\n      return [!_ctx.renderAfterExpand || _ctx.childNodeRendered ? withDirectives((openBlock(), createBlock(\"div\", {\n        key: 0,\n        class: \"el-tree-node__children\",\n        role: \"group\",\n        \"aria-expanded\": _ctx.expanded\n      }, [(openBlock(true), createBlock(Fragment, null, renderList(_ctx.node.childNodes, function (child) {\n        return openBlock(), createBlock(_component_el_tree_node, {\n          key: _ctx.getNodeKey(child),\n          \"render-content\": _ctx.renderContent,\n          \"render-after-expand\": _ctx.renderAfterExpand,\n          \"show-checkbox\": _ctx.showCheckbox,\n          node: child,\n          onNodeExpand: _ctx.handleChildNodeExpand\n        }, null, 8, [\"render-content\", \"render-after-expand\", \"show-checkbox\", \"node\", \"onNodeExpand\"]);\n      }), 128))], 8, [\"aria-expanded\"])), [[vShow, _ctx.expanded]]) : createCommentVNode(\"v-if\", true)];\n    }),\n    _: 1\n  })], 42, [\"aria-expanded\", \"aria-disabled\", \"aria-checked\", \"draggable\", \"data-key\"])), [[vShow, _ctx.node.visible]]);\n}\n\nscript$1.render = render;\nscript$1.__file = \"packages/tree/src/tree-node.vue\";\n\nfunction useKeydown(_ref5, store) {\n  var el$ = _ref5.el$;\n  var treeItems = ref([]);\n  var checkboxItems = ref([]);\n  onMounted(function () {\n    initTabIndex();\n    on(el$.value, \"keydown\", handleKeydown);\n  });\n  onBeforeUnmount(function () {\n    off(el$.value, \"keydown\", handleKeydown);\n  });\n  onUpdated(function () {\n    treeItems.value = Array.from(el$.value.querySelectorAll(\"[role=treeitem]\"));\n    checkboxItems.value = Array.from(el$.value.querySelectorAll(\"input[type=checkbox]\"));\n  });\n  watch(checkboxItems, function (val) {\n    val.forEach(function (checkbox) {\n      checkbox.setAttribute(\"tabindex\", \"-1\");\n    });\n  });\n\n  var handleKeydown = function handleKeydown(ev) {\n    var currentItem = ev.target;\n    if (currentItem.className.indexOf(\"el-tree-node\") === -1) return;\n    var code = ev.code;\n    treeItems.value = Array.from(el$.value.querySelectorAll(\".is-focusable[role=treeitem]\"));\n    var currentIndex = treeItems.value.indexOf(currentItem);\n    var nextIndex;\n\n    if ([EVENT_CODE.up, EVENT_CODE.down].indexOf(code) > -1) {\n      ev.preventDefault();\n\n      if (code === EVENT_CODE.up) {\n        nextIndex = currentIndex === -1 ? 0 : currentIndex !== 0 ? currentIndex - 1 : treeItems.value.length - 1;\n        var startIndex = nextIndex;\n\n        while (true) {\n          if (store.value.getNode(treeItems.value[nextIndex].dataset.key).canFocus) break;\n          nextIndex--;\n\n          if (nextIndex === startIndex) {\n            nextIndex = -1;\n            break;\n          }\n\n          if (nextIndex < 0) {\n            nextIndex = treeItems.value.length - 1;\n          }\n        }\n      } else {\n        nextIndex = currentIndex === -1 ? 0 : currentIndex < treeItems.value.length - 1 ? currentIndex + 1 : 0;\n        var _startIndex = nextIndex;\n\n        while (true) {\n          if (store.value.getNode(treeItems.value[nextIndex].dataset.key).canFocus) break;\n          nextIndex++;\n\n          if (nextIndex === _startIndex) {\n            nextIndex = -1;\n            break;\n          }\n\n          if (nextIndex >= treeItems.value.length) {\n            nextIndex = 0;\n          }\n        }\n      }\n\n      nextIndex !== -1 && treeItems.value[nextIndex].focus();\n    }\n\n    if ([EVENT_CODE.left, EVENT_CODE.right].indexOf(code) > -1) {\n      ev.preventDefault();\n      currentItem.click();\n    }\n\n    var hasInput = currentItem.querySelector('[type=\"checkbox\"]');\n\n    if ([EVENT_CODE.enter, EVENT_CODE.space].indexOf(code) > -1 && hasInput) {\n      ev.preventDefault();\n      hasInput.click();\n    }\n  };\n\n  var initTabIndex = function initTabIndex() {\n    var _a;\n\n    treeItems.value = Array.from(el$.value.querySelectorAll(\".is-focusable[role=treeitem]\"));\n    checkboxItems.value = Array.from(el$.value.querySelectorAll(\"input[type=checkbox]\"));\n    var checkedItem = el$.value.querySelectorAll(\".is-checked[role=treeitem]\");\n\n    if (checkedItem.length) {\n      checkedItem[0].setAttribute(\"tabindex\", \"0\");\n      return;\n    }\n\n    (_a = treeItems.value[0]) == null ? void 0 : _a.setAttribute(\"tabindex\", \"0\");\n  };\n}\n\nvar script$2 = defineComponent({\n  name: \"ElTree\",\n  components: {\n    ElTreeNode: script$1\n  },\n  props: {\n    data: {\n      type: Array\n    },\n    emptyText: {\n      type: String\n    },\n    renderAfterExpand: {\n      type: Boolean,\n      default: true\n    },\n    nodeKey: String,\n    checkStrictly: Boolean,\n    defaultExpandAll: Boolean,\n    expandOnClickNode: {\n      type: Boolean,\n      default: true\n    },\n    checkOnClickNode: Boolean,\n    checkDescendants: {\n      type: Boolean,\n      default: false\n    },\n    autoExpandParent: {\n      type: Boolean,\n      default: true\n    },\n    defaultCheckedKeys: Array,\n    defaultExpandedKeys: Array,\n    currentNodeKey: [String, Number],\n    renderContent: Function,\n    showCheckbox: {\n      type: Boolean,\n      default: false\n    },\n    draggable: {\n      type: Boolean,\n      default: false\n    },\n    allowDrag: Function,\n    allowDrop: Function,\n    props: {\n      type: Object,\n      default: function _default() {\n        return {\n          children: \"children\",\n          label: \"label\",\n          disabled: \"disabled\"\n        };\n      }\n    },\n    lazy: {\n      type: Boolean,\n      default: false\n    },\n    highlightCurrent: Boolean,\n    load: Function,\n    filterNodeMethod: Function,\n    accordion: Boolean,\n    indent: {\n      type: Number,\n      default: 18\n    },\n    iconClass: String\n  },\n  emits: [\"check-change\", \"current-change\", \"node-click\", \"node-contextmenu\", \"node-collapse\", \"node-expand\", \"check\", \"node-drag-start\", \"node-drag-end\", \"node-drop\", \"node-drag-leave\", \"node-drag-enter\", \"node-drag-over\"],\n  setup: function setup(props, ctx) {\n    var _useLocaleInject = useLocaleInject(),\n        t = _useLocaleInject.t;\n\n    var store = ref(new TreeStore({\n      key: props.nodeKey,\n      data: props.data,\n      lazy: props.lazy,\n      props: props.props,\n      load: props.load,\n      currentNodeKey: props.currentNodeKey,\n      checkStrictly: props.checkStrictly,\n      checkDescendants: props.checkDescendants,\n      defaultCheckedKeys: props.defaultCheckedKeys,\n      defaultExpandedKeys: props.defaultExpandedKeys,\n      autoExpandParent: props.autoExpandParent,\n      defaultExpandAll: props.defaultExpandAll,\n      filterNodeMethod: props.filterNodeMethod\n    }));\n    store.value.initialize();\n    var root = ref(store.value.root);\n    var currentNode = ref(null);\n    var el$ = ref(null);\n    var dropIndicator$ = ref(null);\n\n    var _useNodeExpandEventBr2 = useNodeExpandEventBroadcast(props),\n        broadcastExpanded = _useNodeExpandEventBr2.broadcastExpanded;\n\n    var _useDragNodeHandler = useDragNodeHandler({\n      props: props,\n      ctx: ctx,\n      el$: el$,\n      dropIndicator$: dropIndicator$,\n      store: store\n    }),\n        dragState = _useDragNodeHandler.dragState;\n\n    useKeydown({\n      el$: el$\n    }, store);\n    var isEmpty = computed(function () {\n      var childNodes = root.value.childNodes;\n      return !childNodes || childNodes.length === 0 || childNodes.every(function (_ref6) {\n        var visible = _ref6.visible;\n        return !visible;\n      });\n    });\n    watch(function () {\n      return props.defaultCheckedKeys;\n    }, function (newVal) {\n      store.value.setDefaultCheckedKey(newVal);\n    });\n    watch(function () {\n      return props.defaultExpandedKeys;\n    }, function (newVal) {\n      store.value.defaultExpandedKeys = newVal;\n      store.value.setDefaultExpandedKeys(newVal);\n    });\n    watch(function () {\n      return props.data;\n    }, function (newVal) {\n      store.value.setData(newVal);\n    }, {\n      deep: true\n    });\n    watch(function () {\n      return props.checkStrictly;\n    }, function (newVal) {\n      store.value.checkStrictly = newVal;\n    });\n\n    var filter = function filter(value) {\n      if (!props.filterNodeMethod) throw new Error(\"[Tree] filterNodeMethod is required when filter\");\n      store.value.filter(value);\n    };\n\n    var getNodeKey$1 = function getNodeKey$1(node) {\n      return getNodeKey(props.nodeKey, node.data);\n    };\n\n    var getNodePath = function getNodePath(data) {\n      if (!props.nodeKey) throw new Error(\"[Tree] nodeKey is required in getNodePath\");\n      var node = store.value.getNode(data);\n      if (!node) return [];\n      var path = [node.data];\n      var parent = node.parent;\n\n      while (parent && parent !== root.value) {\n        path.push(parent.data);\n        parent = parent.parent;\n      }\n\n      return path.reverse();\n    };\n\n    var getCheckedNodes = function getCheckedNodes(leafOnly, includeHalfChecked) {\n      return store.value.getCheckedNodes(leafOnly, includeHalfChecked);\n    };\n\n    var getCheckedKeys = function getCheckedKeys(leafOnly) {\n      return store.value.getCheckedKeys(leafOnly);\n    };\n\n    var getCurrentNode = function getCurrentNode() {\n      var currentNode2 = store.value.getCurrentNode();\n      return currentNode2 ? currentNode2.data : null;\n    };\n\n    var getCurrentKey = function getCurrentKey() {\n      if (!props.nodeKey) throw new Error(\"[Tree] nodeKey is required in getCurrentKey\");\n      var currentNode2 = getCurrentNode();\n      return currentNode2 ? currentNode2[props.nodeKey] : null;\n    };\n\n    var setCheckedNodes = function setCheckedNodes(nodes, leafOnly) {\n      if (!props.nodeKey) throw new Error(\"[Tree] nodeKey is required in setCheckedNodes\");\n      store.value.setCheckedNodes(nodes, leafOnly);\n    };\n\n    var setCheckedKeys = function setCheckedKeys(keys, leafOnly) {\n      if (!props.nodeKey) throw new Error(\"[Tree] nodeKey is required in setCheckedKeys\");\n      store.value.setCheckedKeys(keys, leafOnly);\n    };\n\n    var setChecked = function setChecked(data, checked, deep) {\n      store.value.setChecked(data, checked, deep);\n    };\n\n    var getHalfCheckedNodes = function getHalfCheckedNodes() {\n      return store.value.getHalfCheckedNodes();\n    };\n\n    var getHalfCheckedKeys = function getHalfCheckedKeys() {\n      return store.value.getHalfCheckedKeys();\n    };\n\n    var setCurrentNode = function setCurrentNode(node) {\n      var shouldAutoExpandParent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      if (!props.nodeKey) throw new Error(\"[Tree] nodeKey is required in setCurrentNode\");\n      store.value.setUserCurrentNode(node, shouldAutoExpandParent);\n    };\n\n    var setCurrentKey = function setCurrentKey(key) {\n      var shouldAutoExpandParent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      if (!props.nodeKey) throw new Error(\"[Tree] nodeKey is required in setCurrentKey\");\n      store.value.setCurrentNodeKey(key, shouldAutoExpandParent);\n    };\n\n    var getNode = function getNode(data) {\n      return store.value.getNode(data);\n    };\n\n    var remove = function remove(data) {\n      store.value.remove(data);\n    };\n\n    var append = function append(data, parentNode) {\n      store.value.append(data, parentNode);\n    };\n\n    var insertBefore = function insertBefore(data, refNode) {\n      store.value.insertBefore(data, refNode);\n    };\n\n    var insertAfter = function insertAfter(data, refNode) {\n      store.value.insertAfter(data, refNode);\n    };\n\n    var handleNodeExpand = function handleNodeExpand(nodeData, node, instance) {\n      broadcastExpanded(node);\n      ctx.emit(\"node-expand\", nodeData, node, instance);\n    };\n\n    var updateKeyChildren = function updateKeyChildren(key, data) {\n      if (!props.nodeKey) throw new Error(\"[Tree] nodeKey is required in updateKeyChild\");\n      store.value.updateChildren(key, data);\n    };\n\n    provide(\"RootTree\", {\n      ctx: ctx,\n      props: props,\n      store: store,\n      root: root,\n      currentNode: currentNode,\n      instance: getCurrentInstance()\n    });\n    return {\n      store: store,\n      root: root,\n      currentNode: currentNode,\n      dragState: dragState,\n      el$: el$,\n      dropIndicator$: dropIndicator$,\n      isEmpty: isEmpty,\n      filter: filter,\n      getNodeKey: getNodeKey$1,\n      getNodePath: getNodePath,\n      getCheckedNodes: getCheckedNodes,\n      getCheckedKeys: getCheckedKeys,\n      getCurrentNode: getCurrentNode,\n      getCurrentKey: getCurrentKey,\n      setCheckedNodes: setCheckedNodes,\n      setCheckedKeys: setCheckedKeys,\n      setChecked: setChecked,\n      getHalfCheckedNodes: getHalfCheckedNodes,\n      getHalfCheckedKeys: getHalfCheckedKeys,\n      setCurrentNode: setCurrentNode,\n      setCurrentKey: setCurrentKey,\n      t: t,\n      getNode: getNode,\n      remove: remove,\n      append: append,\n      insertBefore: insertBefore,\n      insertAfter: insertAfter,\n      handleNodeExpand: handleNodeExpand,\n      updateKeyChildren: updateKeyChildren\n    };\n  }\n});\nvar _hoisted_1$1 = {\n  key: 0,\n  class: \"el-tree__empty-block\"\n};\nvar _hoisted_2 = {\n  class: \"el-tree__empty-text\"\n};\nvar _hoisted_3 = {\n  ref: \"dropIndicator$\",\n  class: \"el-tree__drop-indicator\"\n};\n\nfunction render$1(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_tree_node = resolveComponent(\"el-tree-node\");\n\n  return openBlock(), createBlock(\"div\", {\n    ref: \"el$\",\n    class: [\"el-tree\", {\n      \"el-tree--highlight-current\": _ctx.highlightCurrent,\n      \"is-dragging\": !!_ctx.dragState.draggingNode,\n      \"is-drop-not-allow\": !_ctx.dragState.allowDrop,\n      \"is-drop-inner\": _ctx.dragState.dropType === \"inner\"\n    }],\n    role: \"tree\"\n  }, [(openBlock(true), createBlock(Fragment, null, renderList(_ctx.root.childNodes, function (child) {\n    return openBlock(), createBlock(_component_el_tree_node, {\n      key: _ctx.getNodeKey(child),\n      node: child,\n      props: _ctx.props,\n      accordion: _ctx.accordion,\n      \"render-after-expand\": _ctx.renderAfterExpand,\n      \"show-checkbox\": _ctx.showCheckbox,\n      \"render-content\": _ctx.renderContent,\n      onNodeExpand: _ctx.handleNodeExpand\n    }, null, 8, [\"node\", \"props\", \"accordion\", \"render-after-expand\", \"show-checkbox\", \"render-content\", \"onNodeExpand\"]);\n  }), 128)), _ctx.isEmpty ? (openBlock(), createBlock(\"div\", _hoisted_1$1, [createVNode(\"span\", _hoisted_2, toDisplayString(_ctx.emptyText || _ctx.t(\"el.tree.emptyText\")), 1)])) : createCommentVNode(\"v-if\", true), withDirectives(createVNode(\"div\", _hoisted_3, null, 512), [[vShow, _ctx.dragState.showDropIndicator]])], 2);\n}\n\nscript$2.render = render$1;\nscript$2.__file = \"packages/tree/src/tree.vue\";\n\nscript$2.install = function (app) {\n  app.component(script$2.name, script$2);\n};\n\nvar _Tree = script$2;\nexport default _Tree;","map":{"version":3,"sources":["/Users/fabienne/studium/praxissemester/portfolio/fabienne.vatter/node_modules/element-plus/es/el-tree/index.js"],"names":["reactive","defineComponent","inject","h","provide","ref","getCurrentInstance","watch","nextTick","resolveComponent","withDirectives","openBlock","createBlock","withModifiers","createVNode","createCommentVNode","withCtx","Fragment","renderList","vShow","onMounted","onBeforeUnmount","onUpdated","computed","toDisplayString","ElCollapseTransition","ElCheckbox","mitt","removeClass","addClass","on","off","EVENT_CODE","useLocaleInject","EMPTY_OBJ","process","env","NODE_ENV","Object","freeze","EMPTY_ARR","hasOwnProperty","prototype","hasOwn","val","key","call","NODE_KEY","markNodeData","node","data","defineProperty","value","id","enumerable","configurable","writable","getNodeKey","getChildState","all","none","allWithoutDisable","i","j","length","n","checked","indeterminate","disabled","half","reInitChecked","childNodes","parent","level","store","checkStrictly","getPropertyFromData","prop","props","config","dataProp","nodeIdSeed","Node","options","text","expanded","visible","isCurrent","canFocus","name","loaded","loading","Error","registerNode","isLeaf","isLeafByUser","lazy","setData","defaultExpandAll","expand","Array","isArray","defaultExpandedKeys","indexOf","autoExpandParent","currentNodeKey","currentNode","_initDefaultCheckedNode","updateLeafState","children","insertChild","nodeKey","index","target","deep","some","child","contains","removeChild","batch","getChildren","push","splice","assign","initialize","dataIndex","deregisterNode","targetNode","callback","expandParent","done","forEach","item","shouldLoadData","loadData","setChecked","array","defaultProps","load","recursion","passValue","checkDescendants","handleDescendants","isCheck","all2","forceInit","newData","oldData","map","newDataMap","newNodes","isNodeExists","findIndex","removeChildByData","keys","resolve","doCreateChildren","TreeStore","option","nodesMap","root","loadFn","_initDefaultCheckedNodes","filterNodeMethod","traverse","allHidden","newVal","instanceChanged","updateChildren","refData","refNode","getNode","insertBefore","insertAfter","parentData","parentNode","defaultCheckedKeys","checkedKey","leafOnly","includeHalfChecked","checkedNodes","getCheckedNodes","nodes","getHalfCheckedNodes","allNodes","remove","append","checkedKeys","_getAllNodes","sort","a","b","cache","create","toString","node2","_setCheckedKeys","key2","prevCurrentNode","shouldAutoExpandParent","currNode","setCurrentNode","script","type","required","renderContent","Function","setup","nodeInstance","tree","_self","ctx","slots","default","class","label","__file","useNodeExpandEventBroadcast","parentNodeMap","currentNodeMap","treeNodeExpand","collapse","broadcastExpanded","accordion","childNode","useDragNodeHandler","el$","dropIndicator$","emitter","dragState","showDropIndicator","draggingNode","dropNode","allowDrop","dropType","event","treeNode","allowDrag","preventDefault","dataTransfer","effectAllowed","e","emit","oldDropNode","$el","dropPrev","dropInner","dropNext","userAllowDropInner","dropEffect","nextSibling","previousSibling","targetPosition","getBoundingClientRect","treePosition","prevPercent","nextPercent","indicatorTop","distance","clientY","top","height","iconPosition","querySelector","dropIndicator","bottom","style","left","right","draggingNodeCopy","useDragNodeEmitter","script$1","components","NodeContent","Boolean","renderAfterExpand","showCheckbox","emits","childNodeRendered","oldChecked","oldIndeterminate","node$","instance","console","warn","childrenKey","handleSelectChange","getNodeKey$1","handleClick","expandOnClickNode","handleExpandIconClick","checkOnClickNode","handleCheckChange","handleContextMenu","vnode","stopPropagation","ev","getCheckedKeys","halfCheckedNodes","halfCheckedKeys","getHalfCheckedKeys","handleChildNodeExpand","nodeData","instance2","handleDragStart","draggable","handleDragOver","handleDrop","handleDragEnd","_hoisted_1","render","_ctx","_cache","$props","$setup","$data","$options","_component_el_checkbox","_component_node_content","_component_el_tree_node","_component_el_collapse_transition","role","tabindex","onClick","onContextmenu","onDragstart","onDragover","onDragend","onDrop","indent","iconClass","onChange","onNodeExpand","_","useKeydown","treeItems","checkboxItems","initTabIndex","handleKeydown","from","querySelectorAll","checkbox","setAttribute","currentItem","className","code","currentIndex","nextIndex","up","down","startIndex","dataset","focus","click","hasInput","enter","space","_a","checkedItem","script$2","ElTreeNode","emptyText","String","Number","highlightCurrent","t","isEmpty","every","setDefaultCheckedKey","setDefaultExpandedKeys","filter","getNodePath","path","reverse","getCurrentNode","currentNode2","getCurrentKey","setCheckedNodes","setCheckedKeys","setUserCurrentNode","setCurrentKey","setCurrentNodeKey","handleNodeExpand","updateKeyChildren","_hoisted_1$1","_hoisted_2","_hoisted_3","render$1","install","app","component","_Tree"],"mappings":"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","sourcesContent":["import { reactive, defineComponent, inject, h, provide, ref, getCurrentInstance, watch, nextTick, resolveComponent, withDirectives, openBlock, createBlock, withModifiers, createVNode, createCommentVNode, withCtx, Fragment, renderList, vShow, onMounted, onBeforeUnmount, onUpdated, computed, toDisplayString } from 'vue';\nimport ElCollapseTransition from '../el-collapse-transition';\nimport ElCheckbox from '../el-checkbox';\nimport mitt from 'mitt';\nimport { removeClass, addClass, on, off } from '../utils/dom';\nimport { EVENT_CODE } from '../utils/aria';\nimport { useLocaleInject } from '../hooks';\n\n/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nconst EMPTY_OBJ = (process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\nconst EMPTY_ARR = (process.env.NODE_ENV !== 'production') ? Object.freeze([]) : [];\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\n\nconst NODE_KEY = \"$treeNodeId\";\nconst markNodeData = function(node, data) {\n  if (!data || data[NODE_KEY])\n    return;\n  Object.defineProperty(data, NODE_KEY, {\n    value: node.id,\n    enumerable: false,\n    configurable: false,\n    writable: false\n  });\n};\nconst getNodeKey = function(key, data) {\n  if (!key)\n    return data[NODE_KEY];\n  return data[key];\n};\n\nconst getChildState = (node) => {\n  let all = true;\n  let none = true;\n  let allWithoutDisable = true;\n  for (let i = 0, j = node.length; i < j; i++) {\n    const n = node[i];\n    if (n.checked !== true || n.indeterminate) {\n      all = false;\n      if (!n.disabled) {\n        allWithoutDisable = false;\n      }\n    }\n    if (n.checked !== false || n.indeterminate) {\n      none = false;\n    }\n  }\n  return { all, none, allWithoutDisable, half: !all && !none };\n};\nconst reInitChecked = function(node) {\n  if (node.childNodes.length === 0)\n    return;\n  const { all, none, half } = getChildState(node.childNodes);\n  if (all) {\n    node.checked = true;\n    node.indeterminate = false;\n  } else if (half) {\n    node.checked = false;\n    node.indeterminate = true;\n  } else if (none) {\n    node.checked = false;\n    node.indeterminate = false;\n  }\n  const parent = node.parent;\n  if (!parent || parent.level === 0)\n    return;\n  if (!node.store.checkStrictly) {\n    reInitChecked(parent);\n  }\n};\nconst getPropertyFromData = function(node, prop) {\n  const props = node.store.props;\n  const data = node.data || {};\n  const config = props[prop];\n  if (typeof config === \"function\") {\n    return config(data, node);\n  } else if (typeof config === \"string\") {\n    return data[config];\n  } else if (typeof config === \"undefined\") {\n    const dataProp = data[prop];\n    return dataProp === void 0 ? \"\" : dataProp;\n  }\n};\nlet nodeIdSeed = 0;\nclass Node {\n  constructor(options) {\n    this.id = nodeIdSeed++;\n    this.text = null;\n    this.checked = false;\n    this.indeterminate = false;\n    this.data = null;\n    this.expanded = false;\n    this.parent = null;\n    this.visible = true;\n    this.isCurrent = false;\n    this.canFocus = false;\n    for (const name in options) {\n      if (hasOwn(options, name)) {\n        this[name] = options[name];\n      }\n    }\n    this.level = 0;\n    this.loaded = false;\n    this.childNodes = [];\n    this.loading = false;\n    if (this.parent) {\n      this.level = this.parent.level + 1;\n    }\n  }\n  initialize() {\n    const store = this.store;\n    if (!store) {\n      throw new Error(\"[Node]store is required!\");\n    }\n    store.registerNode(this);\n    const props = store.props;\n    if (props && typeof props.isLeaf !== \"undefined\") {\n      const isLeaf = getPropertyFromData(this, \"isLeaf\");\n      if (typeof isLeaf === \"boolean\") {\n        this.isLeafByUser = isLeaf;\n      }\n    }\n    if (store.lazy !== true && this.data) {\n      this.setData(this.data);\n      if (store.defaultExpandAll) {\n        this.expanded = true;\n        this.canFocus = true;\n      }\n    } else if (this.level > 0 && store.lazy && store.defaultExpandAll) {\n      this.expand();\n    }\n    if (!Array.isArray(this.data)) {\n      markNodeData(this, this.data);\n    }\n    if (!this.data)\n      return;\n    const defaultExpandedKeys = store.defaultExpandedKeys;\n    const key = store.key;\n    if (key && defaultExpandedKeys && defaultExpandedKeys.indexOf(this.key) !== -1) {\n      this.expand(null, store.autoExpandParent);\n    }\n    if (key && store.currentNodeKey !== void 0 && this.key === store.currentNodeKey) {\n      store.currentNode = this;\n      store.currentNode.isCurrent = true;\n    }\n    if (store.lazy) {\n      store._initDefaultCheckedNode(this);\n    }\n    this.updateLeafState();\n    if (this.parent && (this.level === 1 || this.parent.expanded === true))\n      this.canFocus = true;\n  }\n  setData(data) {\n    if (!Array.isArray(data)) {\n      markNodeData(this, data);\n    }\n    this.data = data;\n    this.childNodes = [];\n    let children;\n    if (this.level === 0 && this.data instanceof Array) {\n      children = this.data;\n    } else {\n      children = getPropertyFromData(this, \"children\") || [];\n    }\n    for (let i = 0, j = children.length; i < j; i++) {\n      this.insertChild({ data: children[i] });\n    }\n  }\n  get label() {\n    return getPropertyFromData(this, \"label\");\n  }\n  get key() {\n    const nodeKey = this.store.key;\n    if (this.data)\n      return this.data[nodeKey];\n    return null;\n  }\n  get disabled() {\n    return getPropertyFromData(this, \"disabled\");\n  }\n  get nextSibling() {\n    const parent = this.parent;\n    if (parent) {\n      const index = parent.childNodes.indexOf(this);\n      if (index > -1) {\n        return parent.childNodes[index + 1];\n      }\n    }\n    return null;\n  }\n  get previousSibling() {\n    const parent = this.parent;\n    if (parent) {\n      const index = parent.childNodes.indexOf(this);\n      if (index > -1) {\n        return index > 0 ? parent.childNodes[index - 1] : null;\n      }\n    }\n    return null;\n  }\n  contains(target, deep = true) {\n    return (this.childNodes || []).some((child) => child === target || deep && child.contains(target));\n  }\n  remove() {\n    const parent = this.parent;\n    if (parent) {\n      parent.removeChild(this);\n    }\n  }\n  insertChild(child, index, batch) {\n    if (!child)\n      throw new Error(\"insertChild error: child is required.\");\n    if (!(child instanceof Node)) {\n      if (!batch) {\n        const children = this.getChildren(true);\n        if (children.indexOf(child.data) === -1) {\n          if (typeof index === \"undefined\" || index < 0) {\n            children.push(child.data);\n          } else {\n            children.splice(index, 0, child.data);\n          }\n        }\n      }\n      Object.assign(child, {\n        parent: this,\n        store: this.store\n      });\n      child = reactive(new Node(child));\n      if (child instanceof Node) {\n        child.initialize();\n      }\n    }\n    child.level = this.level + 1;\n    if (typeof index === \"undefined\" || index < 0) {\n      this.childNodes.push(child);\n    } else {\n      this.childNodes.splice(index, 0, child);\n    }\n    this.updateLeafState();\n  }\n  insertBefore(child, ref) {\n    let index;\n    if (ref) {\n      index = this.childNodes.indexOf(ref);\n    }\n    this.insertChild(child, index);\n  }\n  insertAfter(child, ref) {\n    let index;\n    if (ref) {\n      index = this.childNodes.indexOf(ref);\n      if (index !== -1)\n        index += 1;\n    }\n    this.insertChild(child, index);\n  }\n  removeChild(child) {\n    const children = this.getChildren() || [];\n    const dataIndex = children.indexOf(child.data);\n    if (dataIndex > -1) {\n      children.splice(dataIndex, 1);\n    }\n    const index = this.childNodes.indexOf(child);\n    if (index > -1) {\n      this.store && this.store.deregisterNode(child);\n      child.parent = null;\n      this.childNodes.splice(index, 1);\n    }\n    this.updateLeafState();\n  }\n  removeChildByData(data) {\n    let targetNode = null;\n    for (let i = 0; i < this.childNodes.length; i++) {\n      if (this.childNodes[i].data === data) {\n        targetNode = this.childNodes[i];\n        break;\n      }\n    }\n    if (targetNode) {\n      this.removeChild(targetNode);\n    }\n  }\n  expand(callback, expandParent) {\n    const done = () => {\n      if (expandParent) {\n        let parent = this.parent;\n        while (parent.level > 0) {\n          parent.expanded = true;\n          parent = parent.parent;\n        }\n      }\n      this.expanded = true;\n      if (callback)\n        callback();\n      this.childNodes.forEach((item) => {\n        item.canFocus = true;\n      });\n    };\n    if (this.shouldLoadData()) {\n      this.loadData((data) => {\n        if (Array.isArray(data)) {\n          if (this.checked) {\n            this.setChecked(true, true);\n          } else if (!this.store.checkStrictly) {\n            reInitChecked(this);\n          }\n          done();\n        }\n      });\n    } else {\n      done();\n    }\n  }\n  doCreateChildren(array, defaultProps = {}) {\n    array.forEach((item) => {\n      this.insertChild(Object.assign({ data: item }, defaultProps), void 0, true);\n    });\n  }\n  collapse() {\n    this.expanded = false;\n    this.childNodes.forEach((item) => {\n      item.canFocus = false;\n    });\n  }\n  shouldLoadData() {\n    return this.store.lazy === true && this.store.load && !this.loaded;\n  }\n  updateLeafState() {\n    if (this.store.lazy === true && this.loaded !== true && typeof this.isLeafByUser !== \"undefined\") {\n      this.isLeaf = this.isLeafByUser;\n      return;\n    }\n    const childNodes = this.childNodes;\n    if (!this.store.lazy || this.store.lazy === true && this.loaded === true) {\n      this.isLeaf = !childNodes || childNodes.length === 0;\n      return;\n    }\n    this.isLeaf = false;\n  }\n  setChecked(value, deep, recursion, passValue) {\n    this.indeterminate = value === \"half\";\n    this.checked = value === true;\n    if (this.store.checkStrictly)\n      return;\n    if (!(this.shouldLoadData() && !this.store.checkDescendants)) {\n      const { all, allWithoutDisable } = getChildState(this.childNodes);\n      if (!this.isLeaf && (!all && allWithoutDisable)) {\n        this.checked = false;\n        value = false;\n      }\n      const handleDescendants = () => {\n        if (deep) {\n          const childNodes = this.childNodes;\n          for (let i = 0, j = childNodes.length; i < j; i++) {\n            const child = childNodes[i];\n            passValue = passValue || value !== false;\n            const isCheck = child.disabled ? child.checked : passValue;\n            child.setChecked(isCheck, deep, true, passValue);\n          }\n          const { half, all: all2 } = getChildState(childNodes);\n          if (!all2) {\n            this.checked = all2;\n            this.indeterminate = half;\n          }\n        }\n      };\n      if (this.shouldLoadData()) {\n        this.loadData(() => {\n          handleDescendants();\n          reInitChecked(this);\n        }, {\n          checked: value !== false\n        });\n        return;\n      } else {\n        handleDescendants();\n      }\n    }\n    const parent = this.parent;\n    if (!parent || parent.level === 0)\n      return;\n    if (!recursion) {\n      reInitChecked(parent);\n    }\n  }\n  getChildren(forceInit = false) {\n    if (this.level === 0)\n      return this.data;\n    const data = this.data;\n    if (!data)\n      return null;\n    const props = this.store.props;\n    let children = \"children\";\n    if (props) {\n      children = props.children || \"children\";\n    }\n    if (data[children] === void 0) {\n      data[children] = null;\n    }\n    if (forceInit && !data[children]) {\n      data[children] = [];\n    }\n    return data[children];\n  }\n  updateChildren() {\n    const newData = this.getChildren() || [];\n    const oldData = this.childNodes.map((node) => node.data);\n    const newDataMap = {};\n    const newNodes = [];\n    newData.forEach((item, index) => {\n      const key = item[NODE_KEY];\n      const isNodeExists = !!key && oldData.findIndex((data) => data[NODE_KEY] === key) >= 0;\n      if (isNodeExists) {\n        newDataMap[key] = { index, data: item };\n      } else {\n        newNodes.push({ index, data: item });\n      }\n    });\n    if (!this.store.lazy) {\n      oldData.forEach((item) => {\n        if (!newDataMap[item[NODE_KEY]])\n          this.removeChildByData(item);\n      });\n    }\n    newNodes.forEach(({ index, data }) => {\n      this.insertChild({ data }, index);\n    });\n    this.updateLeafState();\n  }\n  loadData(callback, defaultProps = {}) {\n    if (this.store.lazy === true && this.store.load && !this.loaded && (!this.loading || Object.keys(defaultProps).length)) {\n      this.loading = true;\n      const resolve = (children) => {\n        this.loaded = true;\n        this.loading = false;\n        this.childNodes = [];\n        this.doCreateChildren(children, defaultProps);\n        this.updateLeafState();\n        if (callback) {\n          callback.call(this, children);\n        }\n      };\n      this.store.load(this, resolve);\n    } else {\n      if (callback) {\n        callback.call(this);\n      }\n    }\n  }\n}\n\nclass TreeStore {\n  constructor(options) {\n    this.currentNode = null;\n    this.currentNodeKey = null;\n    for (const option in options) {\n      if (hasOwn(options, option)) {\n        this[option] = options[option];\n      }\n    }\n    this.nodesMap = {};\n  }\n  initialize() {\n    this.root = new Node({\n      data: this.data,\n      store: this\n    });\n    this.root.initialize();\n    if (this.lazy && this.load) {\n      const loadFn = this.load;\n      loadFn(this.root, (data) => {\n        this.root.doCreateChildren(data);\n        this._initDefaultCheckedNodes();\n      });\n    } else {\n      this._initDefaultCheckedNodes();\n    }\n  }\n  filter(value) {\n    const filterNodeMethod = this.filterNodeMethod;\n    const lazy = this.lazy;\n    const traverse = function(node) {\n      const childNodes = node.root ? node.root.childNodes : node.childNodes;\n      childNodes.forEach((child) => {\n        child.visible = filterNodeMethod.call(child, value, child.data, child);\n        traverse(child);\n      });\n      if (!node.visible && childNodes.length) {\n        let allHidden = true;\n        allHidden = !childNodes.some((child) => child.visible);\n        if (node.root) {\n          node.root.visible = allHidden === false;\n        } else {\n          node.visible = allHidden === false;\n        }\n      }\n      if (!value)\n        return;\n      if (node.visible && !node.isLeaf && !lazy)\n        node.expand();\n    };\n    traverse(this);\n  }\n  setData(newVal) {\n    const instanceChanged = newVal !== this.root.data;\n    if (instanceChanged) {\n      this.root.setData(newVal);\n      this._initDefaultCheckedNodes();\n    } else {\n      this.root.updateChildren();\n    }\n  }\n  getNode(data) {\n    if (data instanceof Node)\n      return data;\n    const key = typeof data !== \"object\" ? data : getNodeKey(this.key, data);\n    return this.nodesMap[key] || null;\n  }\n  insertBefore(data, refData) {\n    const refNode = this.getNode(refData);\n    refNode.parent.insertBefore({ data }, refNode);\n  }\n  insertAfter(data, refData) {\n    const refNode = this.getNode(refData);\n    refNode.parent.insertAfter({ data }, refNode);\n  }\n  remove(data) {\n    const node = this.getNode(data);\n    if (node && node.parent) {\n      if (node === this.currentNode) {\n        this.currentNode = null;\n      }\n      node.parent.removeChild(node);\n    }\n  }\n  append(data, parentData) {\n    const parentNode = parentData ? this.getNode(parentData) : this.root;\n    if (parentNode) {\n      parentNode.insertChild({ data });\n    }\n  }\n  _initDefaultCheckedNodes() {\n    const defaultCheckedKeys = this.defaultCheckedKeys || [];\n    const nodesMap = this.nodesMap;\n    defaultCheckedKeys.forEach((checkedKey) => {\n      const node = nodesMap[checkedKey];\n      if (node) {\n        node.setChecked(true, !this.checkStrictly);\n      }\n    });\n  }\n  _initDefaultCheckedNode(node) {\n    const defaultCheckedKeys = this.defaultCheckedKeys || [];\n    if (defaultCheckedKeys.indexOf(node.key) !== -1) {\n      node.setChecked(true, !this.checkStrictly);\n    }\n  }\n  setDefaultCheckedKey(newVal) {\n    if (newVal !== this.defaultCheckedKeys) {\n      this.defaultCheckedKeys = newVal;\n      this._initDefaultCheckedNodes();\n    }\n  }\n  registerNode(node) {\n    const key = this.key;\n    if (!node || !node.data)\n      return;\n    if (!key) {\n      this.nodesMap[node.id] = node;\n    } else {\n      const nodeKey = node.key;\n      if (nodeKey !== void 0)\n        this.nodesMap[node.key] = node;\n    }\n  }\n  deregisterNode(node) {\n    const key = this.key;\n    if (!key || !node || !node.data)\n      return;\n    node.childNodes.forEach((child) => {\n      this.deregisterNode(child);\n    });\n    delete this.nodesMap[node.key];\n  }\n  getCheckedNodes(leafOnly = false, includeHalfChecked = false) {\n    const checkedNodes = [];\n    const traverse = function(node) {\n      const childNodes = node.root ? node.root.childNodes : node.childNodes;\n      childNodes.forEach((child) => {\n        if ((child.checked || includeHalfChecked && child.indeterminate) && (!leafOnly || leafOnly && child.isLeaf)) {\n          checkedNodes.push(child.data);\n        }\n        traverse(child);\n      });\n    };\n    traverse(this);\n    return checkedNodes;\n  }\n  getCheckedKeys(leafOnly = false) {\n    return this.getCheckedNodes(leafOnly).map((data) => (data || {})[this.key]);\n  }\n  getHalfCheckedNodes() {\n    const nodes = [];\n    const traverse = function(node) {\n      const childNodes = node.root ? node.root.childNodes : node.childNodes;\n      childNodes.forEach((child) => {\n        if (child.indeterminate) {\n          nodes.push(child.data);\n        }\n        traverse(child);\n      });\n    };\n    traverse(this);\n    return nodes;\n  }\n  getHalfCheckedKeys() {\n    return this.getHalfCheckedNodes().map((data) => (data || {})[this.key]);\n  }\n  _getAllNodes() {\n    const allNodes = [];\n    const nodesMap = this.nodesMap;\n    for (const nodeKey in nodesMap) {\n      if (hasOwn(nodesMap, nodeKey)) {\n        allNodes.push(nodesMap[nodeKey]);\n      }\n    }\n    return allNodes;\n  }\n  updateChildren(key, data) {\n    const node = this.nodesMap[key];\n    if (!node)\n      return;\n    const childNodes = node.childNodes;\n    for (let i = childNodes.length - 1; i >= 0; i--) {\n      const child = childNodes[i];\n      this.remove(child.data);\n    }\n    for (let i = 0, j = data.length; i < j; i++) {\n      const child = data[i];\n      this.append(child, node.data);\n    }\n  }\n  _setCheckedKeys(key, leafOnly = false, checkedKeys) {\n    const allNodes = this._getAllNodes().sort((a, b) => b.level - a.level);\n    const cache = Object.create(null);\n    const keys = Object.keys(checkedKeys);\n    allNodes.forEach((node) => node.setChecked(false, false));\n    for (let i = 0, j = allNodes.length; i < j; i++) {\n      const node = allNodes[i];\n      const nodeKey = node.data[key].toString();\n      const checked = keys.indexOf(nodeKey) > -1;\n      if (!checked) {\n        if (node.checked && !cache[nodeKey]) {\n          node.setChecked(false, false);\n        }\n        continue;\n      }\n      let parent = node.parent;\n      while (parent && parent.level > 0) {\n        cache[parent.data[key]] = true;\n        parent = parent.parent;\n      }\n      if (node.isLeaf || this.checkStrictly) {\n        node.setChecked(true, false);\n        continue;\n      }\n      node.setChecked(true, true);\n      if (leafOnly) {\n        node.setChecked(false, false);\n        const traverse = function(node2) {\n          const childNodes = node2.childNodes;\n          childNodes.forEach((child) => {\n            if (!child.isLeaf) {\n              child.setChecked(false, false);\n            }\n            traverse(child);\n          });\n        };\n        traverse(node);\n      }\n    }\n  }\n  setCheckedNodes(array, leafOnly = false) {\n    const key = this.key;\n    const checkedKeys = {};\n    array.forEach((item) => {\n      checkedKeys[(item || {})[key]] = true;\n    });\n    this._setCheckedKeys(key, leafOnly, checkedKeys);\n  }\n  setCheckedKeys(keys, leafOnly = false) {\n    this.defaultCheckedKeys = keys;\n    const key = this.key;\n    const checkedKeys = {};\n    keys.forEach((key2) => {\n      checkedKeys[key2] = true;\n    });\n    this._setCheckedKeys(key, leafOnly, checkedKeys);\n  }\n  setDefaultExpandedKeys(keys) {\n    keys = keys || [];\n    this.defaultExpandedKeys = keys;\n    keys.forEach((key) => {\n      const node = this.getNode(key);\n      if (node)\n        node.expand(null, this.autoExpandParent);\n    });\n  }\n  setChecked(data, checked, deep) {\n    const node = this.getNode(data);\n    if (node) {\n      node.setChecked(!!checked, deep);\n    }\n  }\n  getCurrentNode() {\n    return this.currentNode;\n  }\n  setCurrentNode(currentNode) {\n    const prevCurrentNode = this.currentNode;\n    if (prevCurrentNode) {\n      prevCurrentNode.isCurrent = false;\n    }\n    this.currentNode = currentNode;\n    this.currentNode.isCurrent = true;\n  }\n  setUserCurrentNode(node, shouldAutoExpandParent = true) {\n    const key = node[this.key];\n    const currNode = this.nodesMap[key];\n    this.setCurrentNode(currNode);\n    if (shouldAutoExpandParent && this.currentNode.level > 1) {\n      this.currentNode.parent.expand(null, true);\n    }\n  }\n  setCurrentNodeKey(key, shouldAutoExpandParent = true) {\n    if (key === null || key === void 0) {\n      this.currentNode && (this.currentNode.isCurrent = false);\n      this.currentNode = null;\n      return;\n    }\n    const node = this.getNode(key);\n    if (node) {\n      this.setCurrentNode(node);\n      if (shouldAutoExpandParent && this.currentNode.level > 1) {\n        this.currentNode.parent.expand(null, true);\n      }\n    }\n  }\n}\n\nvar script = defineComponent({\n  name: \"ElTreeNodeContent\",\n  props: {\n    node: {\n      type: Object,\n      required: true\n    },\n    renderContent: Function\n  },\n  setup(props) {\n    const nodeInstance = inject(\"NodeInstance\");\n    const tree = inject(\"RootTree\");\n    return () => {\n      const node = props.node;\n      const { data, store } = node;\n      return props.renderContent ? props.renderContent(h, { _self: nodeInstance, node, data, store }) : tree.ctx.slots.default ? tree.ctx.slots.default({ node, data }) : h(\"span\", { class: \"el-tree-node__label\" }, [node.label]);\n    };\n  }\n});\n\nscript.__file = \"packages/tree/src/tree-node-content.vue\";\n\nfunction useNodeExpandEventBroadcast(props) {\n  const parentNodeMap = inject(\"TreeNodeMap\", null);\n  const currentNodeMap = {\n    treeNodeExpand: (node) => {\n      if (props.node !== node) {\n        props.node.collapse();\n      }\n    },\n    children: []\n  };\n  if (parentNodeMap) {\n    parentNodeMap.children.push(currentNodeMap);\n  }\n  provide(\"TreeNodeMap\", currentNodeMap);\n  return {\n    broadcastExpanded: (node) => {\n      if (!props.accordion)\n        return;\n      for (const childNode of currentNodeMap.children) {\n        childNode.treeNodeExpand(node);\n      }\n    }\n  };\n}\n\nfunction useDragNodeHandler({ props, ctx, el$, dropIndicator$, store }) {\n  const emitter = mitt();\n  provide(\"DragNodeEmitter\", emitter);\n  const dragState = ref({\n    showDropIndicator: false,\n    draggingNode: null,\n    dropNode: null,\n    allowDrop: true,\n    dropType: null\n  });\n  emitter.on(\"tree-node-drag-start\", ({ event, treeNode }) => {\n    if (typeof props.allowDrag === \"function\" && !props.allowDrag(treeNode.node)) {\n      event.preventDefault();\n      return false;\n    }\n    event.dataTransfer.effectAllowed = \"move\";\n    try {\n      event.dataTransfer.setData(\"text/plain\", \"\");\n    } catch (e) {\n    }\n    dragState.value.draggingNode = treeNode;\n    ctx.emit(\"node-drag-start\", treeNode.node, event);\n  });\n  emitter.on(\"tree-node-drag-over\", ({ event, treeNode }) => {\n    const dropNode = treeNode;\n    const oldDropNode = dragState.value.dropNode;\n    if (oldDropNode && oldDropNode !== dropNode) {\n      removeClass(oldDropNode.$el, \"is-drop-inner\");\n    }\n    const draggingNode = dragState.value.draggingNode;\n    if (!draggingNode || !dropNode)\n      return;\n    let dropPrev = true;\n    let dropInner = true;\n    let dropNext = true;\n    let userAllowDropInner = true;\n    if (typeof props.allowDrop === \"function\") {\n      dropPrev = props.allowDrop(draggingNode.node, dropNode.node, \"prev\");\n      userAllowDropInner = dropInner = props.allowDrop(draggingNode.node, dropNode.node, \"inner\");\n      dropNext = props.allowDrop(draggingNode.node, dropNode.node, \"next\");\n    }\n    event.dataTransfer.dropEffect = dropInner ? \"move\" : \"none\";\n    if ((dropPrev || dropInner || dropNext) && oldDropNode !== dropNode) {\n      if (oldDropNode) {\n        ctx.emit(\"node-drag-leave\", draggingNode.node, oldDropNode.node, event);\n      }\n      ctx.emit(\"node-drag-enter\", draggingNode.node, dropNode.node, event);\n    }\n    if (dropPrev || dropInner || dropNext) {\n      dragState.value.dropNode = dropNode;\n    }\n    if (dropNode.node.nextSibling === draggingNode.node) {\n      dropNext = false;\n    }\n    if (dropNode.node.previousSibling === draggingNode.node) {\n      dropPrev = false;\n    }\n    if (dropNode.node.contains(draggingNode.node, false)) {\n      dropInner = false;\n    }\n    if (draggingNode.node === dropNode.node || draggingNode.node.contains(dropNode.node)) {\n      dropPrev = false;\n      dropInner = false;\n      dropNext = false;\n    }\n    const targetPosition = dropNode.$el.getBoundingClientRect();\n    const treePosition = el$.value.getBoundingClientRect();\n    let dropType;\n    const prevPercent = dropPrev ? dropInner ? 0.25 : dropNext ? 0.45 : 1 : -1;\n    const nextPercent = dropNext ? dropInner ? 0.75 : dropPrev ? 0.55 : 0 : 1;\n    let indicatorTop = -9999;\n    const distance = event.clientY - targetPosition.top;\n    if (distance < targetPosition.height * prevPercent) {\n      dropType = \"before\";\n    } else if (distance > targetPosition.height * nextPercent) {\n      dropType = \"after\";\n    } else if (dropInner) {\n      dropType = \"inner\";\n    } else {\n      dropType = \"none\";\n    }\n    const iconPosition = dropNode.$el.querySelector(\".el-tree-node__expand-icon\").getBoundingClientRect();\n    const dropIndicator = dropIndicator$.value;\n    if (dropType === \"before\") {\n      indicatorTop = iconPosition.top - treePosition.top;\n    } else if (dropType === \"after\") {\n      indicatorTop = iconPosition.bottom - treePosition.top;\n    }\n    dropIndicator.style.top = indicatorTop + \"px\";\n    dropIndicator.style.left = iconPosition.right - treePosition.left + \"px\";\n    if (dropType === \"inner\") {\n      addClass(dropNode.$el, \"is-drop-inner\");\n    } else {\n      removeClass(dropNode.$el, \"is-drop-inner\");\n    }\n    dragState.value.showDropIndicator = dropType === \"before\" || dropType === \"after\";\n    dragState.value.allowDrop = dragState.value.showDropIndicator || userAllowDropInner;\n    dragState.value.dropType = dropType;\n    ctx.emit(\"node-drag-over\", draggingNode.node, dropNode.node, event);\n  });\n  emitter.on(\"tree-node-drag-end\", (event) => {\n    const { draggingNode, dropType, dropNode } = dragState.value;\n    event.preventDefault();\n    event.dataTransfer.dropEffect = \"move\";\n    if (draggingNode && dropNode) {\n      const draggingNodeCopy = { data: draggingNode.node.data };\n      if (dropType !== \"none\") {\n        draggingNode.node.remove();\n      }\n      if (dropType === \"before\") {\n        dropNode.node.parent.insertBefore(draggingNodeCopy, dropNode.node);\n      } else if (dropType === \"after\") {\n        dropNode.node.parent.insertAfter(draggingNodeCopy, dropNode.node);\n      } else if (dropType === \"inner\") {\n        dropNode.node.insertChild(draggingNodeCopy);\n      }\n      if (dropType !== \"none\") {\n        store.value.registerNode(draggingNodeCopy);\n      }\n      removeClass(dropNode.$el, \"is-drop-inner\");\n      ctx.emit(\"node-drag-end\", draggingNode.node, dropNode.node, dropType, event);\n      if (dropType !== \"none\") {\n        ctx.emit(\"node-drop\", draggingNode.node, dropNode.node, dropType, event);\n      }\n    }\n    if (draggingNode && !dropNode) {\n      ctx.emit(\"node-drag-end\", draggingNode.node, null, dropType, event);\n    }\n    dragState.value.showDropIndicator = false;\n    dragState.value.draggingNode = null;\n    dragState.value.dropNode = null;\n    dragState.value.allowDrop = true;\n  });\n  return {\n    dragState\n  };\n}\nfunction useDragNodeEmitter() {\n  const emitter = inject(\"DragNodeEmitter\");\n  return {\n    emitter\n  };\n}\n\nvar script$1 = defineComponent({\n  name: \"ElTreeNode\",\n  components: {\n    ElCollapseTransition,\n    ElCheckbox,\n    NodeContent: script\n  },\n  props: {\n    node: {\n      type: Node,\n      default: () => ({})\n    },\n    props: {\n      type: Object,\n      default: () => ({})\n    },\n    accordion: Boolean,\n    renderContent: Function,\n    renderAfterExpand: Boolean,\n    showCheckbox: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: [\"node-expand\"],\n  setup(props, ctx) {\n    const { broadcastExpanded } = useNodeExpandEventBroadcast(props);\n    const tree = inject(\"RootTree\");\n    const expanded = ref(false);\n    const childNodeRendered = ref(false);\n    const oldChecked = ref(null);\n    const oldIndeterminate = ref(null);\n    const node$ = ref(null);\n    const { emitter } = useDragNodeEmitter();\n    const instance = getCurrentInstance();\n    provide(\"NodeInstance\", instance);\n    if (!tree) {\n      console.warn(\"Can not find node's tree.\");\n    }\n    if (props.node.expanded) {\n      expanded.value = true;\n      childNodeRendered.value = true;\n    }\n    const childrenKey = tree.props[\"children\"] || \"children\";\n    watch(() => {\n      const children = props.node.data[childrenKey];\n      return children && [...children];\n    }, () => {\n      props.node.updateChildren();\n    });\n    watch(() => props.node.indeterminate, (val) => {\n      handleSelectChange(props.node.checked, val);\n    });\n    watch(() => props.node.checked, (val) => {\n      handleSelectChange(val, props.node.indeterminate);\n    });\n    watch(() => props.node.expanded, (val) => {\n      nextTick(() => expanded.value = val);\n      if (val) {\n        childNodeRendered.value = true;\n      }\n    });\n    const getNodeKey$1 = (node) => {\n      return getNodeKey(tree.props.nodeKey, node.data);\n    };\n    const handleSelectChange = (checked, indeterminate) => {\n      if (oldChecked.value !== checked || oldIndeterminate.value !== indeterminate) {\n        tree.ctx.emit(\"check-change\", props.node.data, checked, indeterminate);\n      }\n      oldChecked.value = checked;\n      oldIndeterminate.value = indeterminate;\n    };\n    const handleClick = () => {\n      const store = tree.store.value;\n      store.setCurrentNode(props.node);\n      tree.ctx.emit(\"current-change\", store.currentNode ? store.currentNode.data : null, store.currentNode);\n      tree.currentNode.value = props.node;\n      if (tree.props.expandOnClickNode) {\n        handleExpandIconClick();\n      }\n      if (tree.props.checkOnClickNode && !props.node.disabled) {\n        handleCheckChange(null, {\n          target: { checked: !props.node.checked }\n        });\n      }\n      tree.ctx.emit(\"node-click\", props.node.data, props.node, instance);\n    };\n    const handleContextMenu = (event) => {\n      if (tree.instance.vnode.props[\"onNodeContextmenu\"]) {\n        event.stopPropagation();\n        event.preventDefault();\n      }\n      tree.ctx.emit(\"node-contextmenu\", event, props.node.data, props.node, instance);\n    };\n    const handleExpandIconClick = () => {\n      if (props.node.isLeaf)\n        return;\n      if (expanded.value) {\n        tree.ctx.emit(\"node-collapse\", props.node.data, props.node, instance);\n        props.node.collapse();\n      } else {\n        props.node.expand();\n        ctx.emit(\"node-expand\", props.node.data, props.node, instance);\n      }\n    };\n    const handleCheckChange = (value, ev) => {\n      props.node.setChecked(ev.target.checked, !tree.props.checkStrictly);\n      nextTick(() => {\n        const store = tree.store.value;\n        tree.ctx.emit(\"check\", props.node.data, {\n          checkedNodes: store.getCheckedNodes(),\n          checkedKeys: store.getCheckedKeys(),\n          halfCheckedNodes: store.getHalfCheckedNodes(),\n          halfCheckedKeys: store.getHalfCheckedKeys()\n        });\n      });\n    };\n    const handleChildNodeExpand = (nodeData, node, instance2) => {\n      broadcastExpanded(node);\n      tree.ctx.emit(\"node-expand\", nodeData, node, instance2);\n    };\n    const handleDragStart = (event) => {\n      if (!tree.props.draggable)\n        return;\n      emitter.emit(\"tree-node-drag-start\", { event, treeNode: props });\n    };\n    const handleDragOver = (event) => {\n      if (!tree.props.draggable)\n        return;\n      emitter.emit(\"tree-node-drag-over\", { event, treeNode: { $el: node$.value, node: props.node } });\n      event.preventDefault();\n    };\n    const handleDrop = (event) => {\n      event.preventDefault();\n    };\n    const handleDragEnd = (event) => {\n      if (!tree.props.draggable)\n        return;\n      emitter.emit(\"tree-node-drag-end\", event);\n    };\n    return {\n      node$,\n      tree,\n      expanded,\n      childNodeRendered,\n      oldChecked,\n      oldIndeterminate,\n      emitter,\n      getNodeKey: getNodeKey$1,\n      handleSelectChange,\n      handleClick,\n      handleContextMenu,\n      handleExpandIconClick,\n      handleCheckChange,\n      handleChildNodeExpand,\n      handleDragStart,\n      handleDragOver,\n      handleDrop,\n      handleDragEnd\n    };\n  }\n});\n\nconst _hoisted_1 = {\n  key: 1,\n  class: \"el-tree-node__loading-icon el-icon-loading\"\n};\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_checkbox = resolveComponent(\"el-checkbox\");\n  const _component_node_content = resolveComponent(\"node-content\");\n  const _component_el_tree_node = resolveComponent(\"el-tree-node\");\n  const _component_el_collapse_transition = resolveComponent(\"el-collapse-transition\");\n  return withDirectives((openBlock(), createBlock(\"div\", {\n    ref: \"node$\",\n    class: [\"el-tree-node\", {\n      \"is-expanded\": _ctx.expanded,\n      \"is-current\": _ctx.node.isCurrent,\n      \"is-hidden\": !_ctx.node.visible,\n      \"is-focusable\": !_ctx.node.disabled,\n      \"is-checked\": !_ctx.node.disabled && _ctx.node.checked\n    }],\n    role: \"treeitem\",\n    tabindex: \"-1\",\n    \"aria-expanded\": _ctx.expanded,\n    \"aria-disabled\": _ctx.node.disabled,\n    \"aria-checked\": _ctx.node.checked,\n    draggable: _ctx.tree.props.draggable,\n    \"data-key\": _ctx.getNodeKey(_ctx.node),\n    onClick: _cache[3] || (_cache[3] = withModifiers((...args) => _ctx.handleClick && _ctx.handleClick(...args), [\"stop\"])),\n    onContextmenu: _cache[4] || (_cache[4] = (...args) => _ctx.handleContextMenu && _ctx.handleContextMenu(...args)),\n    onDragstart: _cache[5] || (_cache[5] = withModifiers((...args) => _ctx.handleDragStart && _ctx.handleDragStart(...args), [\"stop\"])),\n    onDragover: _cache[6] || (_cache[6] = withModifiers((...args) => _ctx.handleDragOver && _ctx.handleDragOver(...args), [\"stop\"])),\n    onDragend: _cache[7] || (_cache[7] = withModifiers((...args) => _ctx.handleDragEnd && _ctx.handleDragEnd(...args), [\"stop\"])),\n    onDrop: _cache[8] || (_cache[8] = withModifiers((...args) => _ctx.handleDrop && _ctx.handleDrop(...args), [\"stop\"]))\n  }, [\n    createVNode(\"div\", {\n      class: \"el-tree-node__content\",\n      style: { \"padding-left\": (_ctx.node.level - 1) * _ctx.tree.props.indent + \"px\" }\n    }, [\n      createVNode(\"span\", {\n        class: [\n          {\n            \"is-leaf\": _ctx.node.isLeaf,\n            expanded: !_ctx.node.isLeaf && _ctx.expanded\n          },\n          \"el-tree-node__expand-icon\",\n          _ctx.tree.props.iconClass ? _ctx.tree.props.iconClass : \"el-icon-caret-right\"\n        ],\n        onClick: _cache[1] || (_cache[1] = withModifiers((...args) => _ctx.handleExpandIconClick && _ctx.handleExpandIconClick(...args), [\"stop\"]))\n      }, null, 2),\n      _ctx.showCheckbox ? (openBlock(), createBlock(_component_el_checkbox, {\n        key: 0,\n        \"model-value\": _ctx.node.checked,\n        indeterminate: _ctx.node.indeterminate,\n        disabled: !!_ctx.node.disabled,\n        onClick: _cache[2] || (_cache[2] = withModifiers(() => {\n        }, [\"stop\"])),\n        onChange: _ctx.handleCheckChange\n      }, null, 8, [\"model-value\", \"indeterminate\", \"disabled\", \"onChange\"])) : createCommentVNode(\"v-if\", true),\n      _ctx.node.loading ? (openBlock(), createBlock(\"span\", _hoisted_1)) : createCommentVNode(\"v-if\", true),\n      createVNode(_component_node_content, {\n        node: _ctx.node,\n        \"render-content\": _ctx.renderContent\n      }, null, 8, [\"node\", \"render-content\"])\n    ], 4),\n    createVNode(_component_el_collapse_transition, null, {\n      default: withCtx(() => [\n        !_ctx.renderAfterExpand || _ctx.childNodeRendered ? withDirectives((openBlock(), createBlock(\"div\", {\n          key: 0,\n          class: \"el-tree-node__children\",\n          role: \"group\",\n          \"aria-expanded\": _ctx.expanded\n        }, [\n          (openBlock(true), createBlock(Fragment, null, renderList(_ctx.node.childNodes, (child) => {\n            return openBlock(), createBlock(_component_el_tree_node, {\n              key: _ctx.getNodeKey(child),\n              \"render-content\": _ctx.renderContent,\n              \"render-after-expand\": _ctx.renderAfterExpand,\n              \"show-checkbox\": _ctx.showCheckbox,\n              node: child,\n              onNodeExpand: _ctx.handleChildNodeExpand\n            }, null, 8, [\"render-content\", \"render-after-expand\", \"show-checkbox\", \"node\", \"onNodeExpand\"]);\n          }), 128))\n        ], 8, [\"aria-expanded\"])), [\n          [vShow, _ctx.expanded]\n        ]) : createCommentVNode(\"v-if\", true)\n      ]),\n      _: 1\n    })\n  ], 42, [\"aria-expanded\", \"aria-disabled\", \"aria-checked\", \"draggable\", \"data-key\"])), [\n    [vShow, _ctx.node.visible]\n  ]);\n}\n\nscript$1.render = render;\nscript$1.__file = \"packages/tree/src/tree-node.vue\";\n\nfunction useKeydown({ el$ }, store) {\n  const treeItems = ref([]);\n  const checkboxItems = ref([]);\n  onMounted(() => {\n    initTabIndex();\n    on(el$.value, \"keydown\", handleKeydown);\n  });\n  onBeforeUnmount(() => {\n    off(el$.value, \"keydown\", handleKeydown);\n  });\n  onUpdated(() => {\n    treeItems.value = Array.from(el$.value.querySelectorAll(\"[role=treeitem]\"));\n    checkboxItems.value = Array.from(el$.value.querySelectorAll(\"input[type=checkbox]\"));\n  });\n  watch(checkboxItems, (val) => {\n    val.forEach((checkbox) => {\n      checkbox.setAttribute(\"tabindex\", \"-1\");\n    });\n  });\n  const handleKeydown = (ev) => {\n    const currentItem = ev.target;\n    if (currentItem.className.indexOf(\"el-tree-node\") === -1)\n      return;\n    const code = ev.code;\n    treeItems.value = Array.from(el$.value.querySelectorAll(\".is-focusable[role=treeitem]\"));\n    const currentIndex = treeItems.value.indexOf(currentItem);\n    let nextIndex;\n    if ([EVENT_CODE.up, EVENT_CODE.down].indexOf(code) > -1) {\n      ev.preventDefault();\n      if (code === EVENT_CODE.up) {\n        nextIndex = currentIndex === -1 ? 0 : currentIndex !== 0 ? currentIndex - 1 : treeItems.value.length - 1;\n        const startIndex = nextIndex;\n        while (true) {\n          if (store.value.getNode(treeItems.value[nextIndex].dataset.key).canFocus)\n            break;\n          nextIndex--;\n          if (nextIndex === startIndex) {\n            nextIndex = -1;\n            break;\n          }\n          if (nextIndex < 0) {\n            nextIndex = treeItems.value.length - 1;\n          }\n        }\n      } else {\n        nextIndex = currentIndex === -1 ? 0 : currentIndex < treeItems.value.length - 1 ? currentIndex + 1 : 0;\n        const startIndex = nextIndex;\n        while (true) {\n          if (store.value.getNode(treeItems.value[nextIndex].dataset.key).canFocus)\n            break;\n          nextIndex++;\n          if (nextIndex === startIndex) {\n            nextIndex = -1;\n            break;\n          }\n          if (nextIndex >= treeItems.value.length) {\n            nextIndex = 0;\n          }\n        }\n      }\n      nextIndex !== -1 && treeItems.value[nextIndex].focus();\n    }\n    if ([EVENT_CODE.left, EVENT_CODE.right].indexOf(code) > -1) {\n      ev.preventDefault();\n      currentItem.click();\n    }\n    const hasInput = currentItem.querySelector('[type=\"checkbox\"]');\n    if ([EVENT_CODE.enter, EVENT_CODE.space].indexOf(code) > -1 && hasInput) {\n      ev.preventDefault();\n      hasInput.click();\n    }\n  };\n  const initTabIndex = () => {\n    var _a;\n    treeItems.value = Array.from(el$.value.querySelectorAll(\".is-focusable[role=treeitem]\"));\n    checkboxItems.value = Array.from(el$.value.querySelectorAll(\"input[type=checkbox]\"));\n    const checkedItem = el$.value.querySelectorAll(\".is-checked[role=treeitem]\");\n    if (checkedItem.length) {\n      checkedItem[0].setAttribute(\"tabindex\", \"0\");\n      return;\n    }\n    (_a = treeItems.value[0]) == null ? void 0 : _a.setAttribute(\"tabindex\", \"0\");\n  };\n}\n\nvar script$2 = defineComponent({\n  name: \"ElTree\",\n  components: { ElTreeNode: script$1 },\n  props: {\n    data: {\n      type: Array\n    },\n    emptyText: {\n      type: String\n    },\n    renderAfterExpand: {\n      type: Boolean,\n      default: true\n    },\n    nodeKey: String,\n    checkStrictly: Boolean,\n    defaultExpandAll: Boolean,\n    expandOnClickNode: {\n      type: Boolean,\n      default: true\n    },\n    checkOnClickNode: Boolean,\n    checkDescendants: {\n      type: Boolean,\n      default: false\n    },\n    autoExpandParent: {\n      type: Boolean,\n      default: true\n    },\n    defaultCheckedKeys: Array,\n    defaultExpandedKeys: Array,\n    currentNodeKey: [String, Number],\n    renderContent: Function,\n    showCheckbox: {\n      type: Boolean,\n      default: false\n    },\n    draggable: {\n      type: Boolean,\n      default: false\n    },\n    allowDrag: Function,\n    allowDrop: Function,\n    props: {\n      type: Object,\n      default() {\n        return {\n          children: \"children\",\n          label: \"label\",\n          disabled: \"disabled\"\n        };\n      }\n    },\n    lazy: {\n      type: Boolean,\n      default: false\n    },\n    highlightCurrent: Boolean,\n    load: Function,\n    filterNodeMethod: Function,\n    accordion: Boolean,\n    indent: {\n      type: Number,\n      default: 18\n    },\n    iconClass: String\n  },\n  emits: [\n    \"check-change\",\n    \"current-change\",\n    \"node-click\",\n    \"node-contextmenu\",\n    \"node-collapse\",\n    \"node-expand\",\n    \"check\",\n    \"node-drag-start\",\n    \"node-drag-end\",\n    \"node-drop\",\n    \"node-drag-leave\",\n    \"node-drag-enter\",\n    \"node-drag-over\"\n  ],\n  setup(props, ctx) {\n    const { t } = useLocaleInject();\n    const store = ref(new TreeStore({\n      key: props.nodeKey,\n      data: props.data,\n      lazy: props.lazy,\n      props: props.props,\n      load: props.load,\n      currentNodeKey: props.currentNodeKey,\n      checkStrictly: props.checkStrictly,\n      checkDescendants: props.checkDescendants,\n      defaultCheckedKeys: props.defaultCheckedKeys,\n      defaultExpandedKeys: props.defaultExpandedKeys,\n      autoExpandParent: props.autoExpandParent,\n      defaultExpandAll: props.defaultExpandAll,\n      filterNodeMethod: props.filterNodeMethod\n    }));\n    store.value.initialize();\n    const root = ref(store.value.root);\n    const currentNode = ref(null);\n    const el$ = ref(null);\n    const dropIndicator$ = ref(null);\n    const { broadcastExpanded } = useNodeExpandEventBroadcast(props);\n    const { dragState } = useDragNodeHandler({\n      props,\n      ctx,\n      el$,\n      dropIndicator$,\n      store\n    });\n    useKeydown({ el$ }, store);\n    const isEmpty = computed(() => {\n      const { childNodes } = root.value;\n      return !childNodes || childNodes.length === 0 || childNodes.every(({ visible }) => !visible);\n    });\n    watch(() => props.defaultCheckedKeys, (newVal) => {\n      store.value.setDefaultCheckedKey(newVal);\n    });\n    watch(() => props.defaultExpandedKeys, (newVal) => {\n      store.value.defaultExpandedKeys = newVal;\n      store.value.setDefaultExpandedKeys(newVal);\n    });\n    watch(() => props.data, (newVal) => {\n      store.value.setData(newVal);\n    }, { deep: true });\n    watch(() => props.checkStrictly, (newVal) => {\n      store.value.checkStrictly = newVal;\n    });\n    const filter = (value) => {\n      if (!props.filterNodeMethod)\n        throw new Error(\"[Tree] filterNodeMethod is required when filter\");\n      store.value.filter(value);\n    };\n    const getNodeKey$1 = (node) => {\n      return getNodeKey(props.nodeKey, node.data);\n    };\n    const getNodePath = (data) => {\n      if (!props.nodeKey)\n        throw new Error(\"[Tree] nodeKey is required in getNodePath\");\n      const node = store.value.getNode(data);\n      if (!node)\n        return [];\n      const path = [node.data];\n      let parent = node.parent;\n      while (parent && parent !== root.value) {\n        path.push(parent.data);\n        parent = parent.parent;\n      }\n      return path.reverse();\n    };\n    const getCheckedNodes = (leafOnly, includeHalfChecked) => {\n      return store.value.getCheckedNodes(leafOnly, includeHalfChecked);\n    };\n    const getCheckedKeys = (leafOnly) => {\n      return store.value.getCheckedKeys(leafOnly);\n    };\n    const getCurrentNode = () => {\n      const currentNode2 = store.value.getCurrentNode();\n      return currentNode2 ? currentNode2.data : null;\n    };\n    const getCurrentKey = () => {\n      if (!props.nodeKey)\n        throw new Error(\"[Tree] nodeKey is required in getCurrentKey\");\n      const currentNode2 = getCurrentNode();\n      return currentNode2 ? currentNode2[props.nodeKey] : null;\n    };\n    const setCheckedNodes = (nodes, leafOnly) => {\n      if (!props.nodeKey)\n        throw new Error(\"[Tree] nodeKey is required in setCheckedNodes\");\n      store.value.setCheckedNodes(nodes, leafOnly);\n    };\n    const setCheckedKeys = (keys, leafOnly) => {\n      if (!props.nodeKey)\n        throw new Error(\"[Tree] nodeKey is required in setCheckedKeys\");\n      store.value.setCheckedKeys(keys, leafOnly);\n    };\n    const setChecked = (data, checked, deep) => {\n      store.value.setChecked(data, checked, deep);\n    };\n    const getHalfCheckedNodes = () => {\n      return store.value.getHalfCheckedNodes();\n    };\n    const getHalfCheckedKeys = () => {\n      return store.value.getHalfCheckedKeys();\n    };\n    const setCurrentNode = (node, shouldAutoExpandParent = true) => {\n      if (!props.nodeKey)\n        throw new Error(\"[Tree] nodeKey is required in setCurrentNode\");\n      store.value.setUserCurrentNode(node, shouldAutoExpandParent);\n    };\n    const setCurrentKey = (key, shouldAutoExpandParent = true) => {\n      if (!props.nodeKey)\n        throw new Error(\"[Tree] nodeKey is required in setCurrentKey\");\n      store.value.setCurrentNodeKey(key, shouldAutoExpandParent);\n    };\n    const getNode = (data) => {\n      return store.value.getNode(data);\n    };\n    const remove = (data) => {\n      store.value.remove(data);\n    };\n    const append = (data, parentNode) => {\n      store.value.append(data, parentNode);\n    };\n    const insertBefore = (data, refNode) => {\n      store.value.insertBefore(data, refNode);\n    };\n    const insertAfter = (data, refNode) => {\n      store.value.insertAfter(data, refNode);\n    };\n    const handleNodeExpand = (nodeData, node, instance) => {\n      broadcastExpanded(node);\n      ctx.emit(\"node-expand\", nodeData, node, instance);\n    };\n    const updateKeyChildren = (key, data) => {\n      if (!props.nodeKey)\n        throw new Error(\"[Tree] nodeKey is required in updateKeyChild\");\n      store.value.updateChildren(key, data);\n    };\n    provide(\"RootTree\", {\n      ctx,\n      props,\n      store,\n      root,\n      currentNode,\n      instance: getCurrentInstance()\n    });\n    return {\n      store,\n      root,\n      currentNode,\n      dragState,\n      el$,\n      dropIndicator$,\n      isEmpty,\n      filter,\n      getNodeKey: getNodeKey$1,\n      getNodePath,\n      getCheckedNodes,\n      getCheckedKeys,\n      getCurrentNode,\n      getCurrentKey,\n      setCheckedNodes,\n      setCheckedKeys,\n      setChecked,\n      getHalfCheckedNodes,\n      getHalfCheckedKeys,\n      setCurrentNode,\n      setCurrentKey,\n      t,\n      getNode,\n      remove,\n      append,\n      insertBefore,\n      insertAfter,\n      handleNodeExpand,\n      updateKeyChildren\n    };\n  }\n});\n\nconst _hoisted_1$1 = {\n  key: 0,\n  class: \"el-tree__empty-block\"\n};\nconst _hoisted_2 = { class: \"el-tree__empty-text\" };\nconst _hoisted_3 = {\n  ref: \"dropIndicator$\",\n  class: \"el-tree__drop-indicator\"\n};\nfunction render$1(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_tree_node = resolveComponent(\"el-tree-node\");\n  return openBlock(), createBlock(\"div\", {\n    ref: \"el$\",\n    class: [\"el-tree\", {\n      \"el-tree--highlight-current\": _ctx.highlightCurrent,\n      \"is-dragging\": !!_ctx.dragState.draggingNode,\n      \"is-drop-not-allow\": !_ctx.dragState.allowDrop,\n      \"is-drop-inner\": _ctx.dragState.dropType === \"inner\"\n    }],\n    role: \"tree\"\n  }, [\n    (openBlock(true), createBlock(Fragment, null, renderList(_ctx.root.childNodes, (child) => {\n      return openBlock(), createBlock(_component_el_tree_node, {\n        key: _ctx.getNodeKey(child),\n        node: child,\n        props: _ctx.props,\n        accordion: _ctx.accordion,\n        \"render-after-expand\": _ctx.renderAfterExpand,\n        \"show-checkbox\": _ctx.showCheckbox,\n        \"render-content\": _ctx.renderContent,\n        onNodeExpand: _ctx.handleNodeExpand\n      }, null, 8, [\"node\", \"props\", \"accordion\", \"render-after-expand\", \"show-checkbox\", \"render-content\", \"onNodeExpand\"]);\n    }), 128)),\n    _ctx.isEmpty ? (openBlock(), createBlock(\"div\", _hoisted_1$1, [\n      createVNode(\"span\", _hoisted_2, toDisplayString(_ctx.emptyText || _ctx.t(\"el.tree.emptyText\")), 1)\n    ])) : createCommentVNode(\"v-if\", true),\n    withDirectives(createVNode(\"div\", _hoisted_3, null, 512), [\n      [vShow, _ctx.dragState.showDropIndicator]\n    ])\n  ], 2);\n}\n\nscript$2.render = render$1;\nscript$2.__file = \"packages/tree/src/tree.vue\";\n\nscript$2.install = (app) => {\n  app.component(script$2.name, script$2);\n};\nconst _Tree = script$2;\n\nexport default _Tree;\n"]},"metadata":{},"sourceType":"module"}