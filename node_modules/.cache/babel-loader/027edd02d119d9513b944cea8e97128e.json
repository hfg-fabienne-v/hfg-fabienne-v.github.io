{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport isServer from './isServer';\n\nfunction scrollIntoView(container, selected) {\n  if (isServer) return;\n\n  if (!selected) {\n    container.scrollTop = 0;\n    return;\n  }\n\n  var offsetParents = [];\n  var pointer = selected.offsetParent;\n\n  while (pointer !== null && container !== pointer && container.contains(pointer)) {\n    offsetParents.push(pointer);\n    pointer = pointer.offsetParent;\n  }\n\n  var top = selected.offsetTop + offsetParents.reduce(function (prev, curr) {\n    return prev + curr.offsetTop;\n  }, 0);\n  var bottom = top + selected.offsetHeight;\n  var viewRectTop = container.scrollTop;\n  var viewRectBottom = viewRectTop + container.clientHeight;\n\n  if (top < viewRectTop) {\n    container.scrollTop = top;\n  } else if (bottom > viewRectBottom) {\n    container.scrollTop = bottom - container.clientHeight;\n  }\n}\n\nexport default scrollIntoView;","map":{"version":3,"sources":["/Users/fabienne/studium/praxissemester/portfolio/fabienne.vatter/node_modules/element-plus/es/utils/scroll-into-view.js"],"names":["isServer","scrollIntoView","container","selected","scrollTop","offsetParents","pointer","offsetParent","contains","push","top","offsetTop","reduce","prev","curr","bottom","offsetHeight","viewRectTop","viewRectBottom","clientHeight"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,YAArB;;AAEA,SAASC,cAAT,CAAwBC,SAAxB,EAAmCC,QAAnC,EAA6C;AACzC,MAAIH,QAAJ,EACI;;AACJ,MAAI,CAACG,QAAL,EAAe;AACXD,IAAAA,SAAS,CAACE,SAAV,GAAsB,CAAtB;AACA;AACH;;AACD,MAAMC,aAAa,GAAG,EAAtB;AACA,MAAIC,OAAO,GAAGH,QAAQ,CAACI,YAAvB;;AACA,SAAOD,OAAO,KAAK,IAAZ,IACHJ,SAAS,KAAKI,OADX,IAEHJ,SAAS,CAACM,QAAV,CAAmBF,OAAnB,CAFJ,EAEiC;AAC7BD,IAAAA,aAAa,CAACI,IAAd,CAAmBH,OAAnB;AACAA,IAAAA,OAAO,GAAGA,OAAO,CAACC,YAAlB;AACH;;AACD,MAAMG,GAAG,GAAGP,QAAQ,CAACQ,SAAT,GACRN,aAAa,CAACO,MAAd,CAAqB,UAACC,IAAD,EAAOC,IAAP;AAAA,WAAgBD,IAAI,GAAGC,IAAI,CAACH,SAA5B;AAAA,GAArB,EAA4D,CAA5D,CADJ;AAEA,MAAMI,MAAM,GAAGL,GAAG,GAAGP,QAAQ,CAACa,YAA9B;AACA,MAAMC,WAAW,GAAGf,SAAS,CAACE,SAA9B;AACA,MAAMc,cAAc,GAAGD,WAAW,GAAGf,SAAS,CAACiB,YAA/C;;AACA,MAAIT,GAAG,GAAGO,WAAV,EAAuB;AACnBf,IAAAA,SAAS,CAACE,SAAV,GAAsBM,GAAtB;AACH,GAFD,MAGK,IAAIK,MAAM,GAAGG,cAAb,EAA6B;AAC9BhB,IAAAA,SAAS,CAACE,SAAV,GAAsBW,MAAM,GAAGb,SAAS,CAACiB,YAAzC;AACH;AACJ;;AAED,eAAelB,cAAf","sourcesContent":["import isServer from './isServer';\n\nfunction scrollIntoView(container, selected) {\r\n    if (isServer)\r\n        return;\r\n    if (!selected) {\r\n        container.scrollTop = 0;\r\n        return;\r\n    }\r\n    const offsetParents = [];\r\n    let pointer = selected.offsetParent;\r\n    while (pointer !== null &&\r\n        container !== pointer &&\r\n        container.contains(pointer)) {\r\n        offsetParents.push(pointer);\r\n        pointer = pointer.offsetParent;\r\n    }\r\n    const top = selected.offsetTop +\r\n        offsetParents.reduce((prev, curr) => prev + curr.offsetTop, 0);\r\n    const bottom = top + selected.offsetHeight;\r\n    const viewRectTop = container.scrollTop;\r\n    const viewRectBottom = viewRectTop + container.clientHeight;\r\n    if (top < viewRectTop) {\r\n        container.scrollTop = top;\r\n    }\r\n    else if (bottom > viewRectBottom) {\r\n        container.scrollTop = bottom - container.clientHeight;\r\n    }\r\n}\n\nexport default scrollIntoView;\n"]},"metadata":{},"sourceType":"module"}