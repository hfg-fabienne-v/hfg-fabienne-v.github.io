{"ast":null,"code":"import \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.concat.js\";\nvar EVENT_CODE = {\n  tab: 'Tab',\n  enter: 'Enter',\n  space: 'Space',\n  left: 'ArrowLeft',\n  up: 'ArrowUp',\n  right: 'ArrowRight',\n  down: 'ArrowDown',\n  esc: 'Escape',\n  delete: 'Delete',\n  backspace: 'Backspace'\n};\nvar FOCUSABLE_ELEMENT_SELECTORS = \"a[href],button:not([disabled]),button:not([hidden]),:not([tabindex=\\\"-1\\\"]),input:not([disabled]),input:not([type=\\\"hidden\\\"]),select:not([disabled]),textarea:not([disabled])\";\n\nvar isVisible = function isVisible(element) {\n  if (process.env.NODE_ENV === 'test') return true;\n  var computed = getComputedStyle(element);\n  return computed.position === 'fixed' ? false : element.offsetParent !== null;\n};\n\nvar obtainAllFocusableElements = function obtainAllFocusableElements(element) {\n  return Array.from(element.querySelectorAll(FOCUSABLE_ELEMENT_SELECTORS)).filter(isFocusable).filter(isVisible);\n};\n\nvar isFocusable = function isFocusable(element) {\n  if (element.tabIndex > 0 || element.tabIndex === 0 && element.getAttribute('tabIndex') !== null) {\n    return true;\n  }\n\n  if (element.disabled) {\n    return false;\n  }\n\n  switch (element.nodeName) {\n    case 'A':\n      {\n        return !!element.href && element.rel !== 'ignore';\n      }\n\n    case 'INPUT':\n      {\n        return !(element.type === 'hidden' || element.type === 'file');\n      }\n\n    case 'BUTTON':\n    case 'SELECT':\n    case 'TEXTAREA':\n      {\n        return true;\n      }\n\n    default:\n      {\n        return false;\n      }\n  }\n};\n\nvar attemptFocus = function attemptFocus(element) {\n  var _a;\n\n  if (!isFocusable(element)) {\n    return false;\n  }\n\n  Utils.IgnoreUtilFocusChanges = true;\n  (_a = element.focus) === null || _a === void 0 ? void 0 : _a.call(element);\n  Utils.IgnoreUtilFocusChanges = false;\n  return document.activeElement === element;\n};\n\nvar triggerEvent = function triggerEvent(elm, name) {\n  var eventName;\n\n  if (name.includes('mouse') || name.includes('click')) {\n    eventName = 'MouseEvents';\n  } else if (name.includes('key')) {\n    eventName = 'KeyboardEvent';\n  } else {\n    eventName = 'HTMLEvents';\n  }\n\n  var evt = document.createEvent(eventName);\n\n  for (var _len = arguments.length, opts = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    opts[_key - 2] = arguments[_key];\n  }\n\n  evt.initEvent.apply(evt, [name].concat(opts));\n  elm.dispatchEvent(evt);\n  return elm;\n};\n\nvar Utils = {\n  IgnoreUtilFocusChanges: false,\n  focusFirstDescendant: function focusFirstDescendant(element) {\n    for (var i = 0; i < element.childNodes.length; i++) {\n      var child = element.childNodes[i];\n\n      if (attemptFocus(child) || this.focusFirstDescendant(child)) {\n        return true;\n      }\n    }\n\n    return false;\n  },\n  focusLastDescendant: function focusLastDescendant(element) {\n    for (var i = element.childNodes.length - 1; i >= 0; i--) {\n      var child = element.childNodes[i];\n\n      if (attemptFocus(child) || this.focusLastDescendant(child)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n};\nexport default Utils;\nexport { EVENT_CODE, attemptFocus, isFocusable, isVisible, obtainAllFocusableElements, triggerEvent };","map":{"version":3,"sources":["/Users/fabienne/studium/praxissemester/portfolio/fabienne.vatter/node_modules/element-plus/es/utils/aria.js"],"names":["EVENT_CODE","tab","enter","space","left","up","right","down","esc","delete","backspace","FOCUSABLE_ELEMENT_SELECTORS","isVisible","element","process","env","NODE_ENV","computed","getComputedStyle","position","offsetParent","obtainAllFocusableElements","Array","from","querySelectorAll","filter","isFocusable","tabIndex","getAttribute","disabled","nodeName","href","rel","type","attemptFocus","_a","Utils","IgnoreUtilFocusChanges","focus","call","document","activeElement","triggerEvent","elm","name","eventName","includes","evt","createEvent","opts","initEvent","dispatchEvent","focusFirstDescendant","i","childNodes","length","child","focusLastDescendant"],"mappings":";;;;;;;AAAA,IAAMA,UAAU,GAAG;AACfC,EAAAA,GAAG,EAAE,KADU;AAEfC,EAAAA,KAAK,EAAE,OAFQ;AAGfC,EAAAA,KAAK,EAAE,OAHQ;AAIfC,EAAAA,IAAI,EAAE,WAJS;AAKfC,EAAAA,EAAE,EAAE,SALW;AAMfC,EAAAA,KAAK,EAAE,YANQ;AAOfC,EAAAA,IAAI,EAAE,WAPS;AAQfC,EAAAA,GAAG,EAAE,QARU;AASfC,EAAAA,MAAM,EAAE,QATO;AAUfC,EAAAA,SAAS,EAAE;AAVI,CAAnB;AAYA,IAAMC,2BAA2B,mLAAjC;;AACA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,OAAD,EAAa;AAC3B,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,MAA7B,EACI,OAAO,IAAP;AACJ,MAAMC,QAAQ,GAAGC,gBAAgB,CAACL,OAAD,CAAjC;AACA,SAAOI,QAAQ,CAACE,QAAT,KAAsB,OAAtB,GAAgC,KAAhC,GAAwCN,OAAO,CAACO,YAAR,KAAyB,IAAxE;AACH,CALD;;AAMA,IAAMC,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACR,OAAD,EAAa;AAC5C,SAAOS,KAAK,CAACC,IAAN,CAAWV,OAAO,CAACW,gBAAR,CAAyBb,2BAAzB,CAAX,EAAkEc,MAAlE,CAAyEC,WAAzE,EACFD,MADE,CACKb,SADL,CAAP;AAEH,CAHD;;AAIA,IAAMc,WAAW,GAAG,SAAdA,WAAc,CAACb,OAAD,EAAa;AAC7B,MAAIA,OAAO,CAACc,QAAR,GAAmB,CAAnB,IACCd,OAAO,CAACc,QAAR,KAAqB,CAArB,IAA0Bd,OAAO,CAACe,YAAR,CAAqB,UAArB,MAAqC,IADpE,EAC2E;AACvE,WAAO,IAAP;AACH;;AACD,MAAIf,OAAO,CAACgB,QAAZ,EAAsB;AAClB,WAAO,KAAP;AACH;;AACD,UAAQhB,OAAO,CAACiB,QAAhB;AACI,SAAK,GAAL;AAAU;AACN,eAAO,CAAC,CAACjB,OAAO,CAACkB,IAAV,IAAkBlB,OAAO,CAACmB,GAAR,KAAgB,QAAzC;AACH;;AACD,SAAK,OAAL;AAAc;AACV,eAAO,EAAEnB,OAAO,CAACoB,IAAR,KAAiB,QAAjB,IAA6BpB,OAAO,CAACoB,IAAR,KAAiB,MAAhD,CAAP;AACH;;AACD,SAAK,QAAL;AACA,SAAK,QAAL;AACA,SAAK,UAAL;AAAiB;AACb,eAAO,IAAP;AACH;;AACD;AAAS;AACL,eAAO,KAAP;AACH;AAdL;AAgBH,CAxBD;;AAyBA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACrB,OAAD,EAAa;AAC9B,MAAIsB,EAAJ;;AACA,MAAI,CAACT,WAAW,CAACb,OAAD,CAAhB,EAA2B;AACvB,WAAO,KAAP;AACH;;AACDuB,EAAAA,KAAK,CAACC,sBAAN,GAA+B,IAA/B;AACA,GAACF,EAAE,GAAGtB,OAAO,CAACyB,KAAd,MAAyB,IAAzB,IAAiCH,EAAE,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,EAAE,CAACI,IAAH,CAAQ1B,OAAR,CAA1D;AACAuB,EAAAA,KAAK,CAACC,sBAAN,GAA+B,KAA/B;AACA,SAAOG,QAAQ,CAACC,aAAT,KAA2B5B,OAAlC;AACH,CATD;;AAUA,IAAM6B,YAAY,GAAG,SAAfA,YAAe,CAAUC,GAAV,EAAeC,IAAf,EAA8B;AAC/C,MAAIC,SAAJ;;AACA,MAAID,IAAI,CAACE,QAAL,CAAc,OAAd,KAA0BF,IAAI,CAACE,QAAL,CAAc,OAAd,CAA9B,EAAsD;AAClDD,IAAAA,SAAS,GAAG,aAAZ;AACH,GAFD,MAGK,IAAID,IAAI,CAACE,QAAL,CAAc,KAAd,CAAJ,EAA0B;AAC3BD,IAAAA,SAAS,GAAG,eAAZ;AACH,GAFI,MAGA;AACDA,IAAAA,SAAS,GAAG,YAAZ;AACH;;AACD,MAAME,GAAG,GAAGP,QAAQ,CAACQ,WAAT,CAAqBH,SAArB,CAAZ;;AAX+C,oCAANI,IAAM;AAANA,IAAAA,IAAM;AAAA;;AAY/CF,EAAAA,GAAG,CAACG,SAAJ,OAAAH,GAAG,GAAWH,IAAX,SAAoBK,IAApB,EAAH;AACAN,EAAAA,GAAG,CAACQ,aAAJ,CAAkBJ,GAAlB;AACA,SAAOJ,GAAP;AACH,CAfD;;AAgBA,IAAMP,KAAK,GAAG;AACVC,EAAAA,sBAAsB,EAAE,KADd;AAEVe,EAAAA,oBAAoB,EAAE,8BAAUvC,OAAV,EAAmB;AACrC,SAAK,IAAIwC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGxC,OAAO,CAACyC,UAAR,CAAmBC,MAAvC,EAA+CF,CAAC,EAAhD,EAAoD;AAChD,UAAMG,KAAK,GAAG3C,OAAO,CAACyC,UAAR,CAAmBD,CAAnB,CAAd;;AACA,UAAInB,YAAY,CAACsB,KAAD,CAAZ,IACA,KAAKJ,oBAAL,CAA0BI,KAA1B,CADJ,EACsC;AAClC,eAAO,IAAP;AACH;AACJ;;AACD,WAAO,KAAP;AACH,GAXS;AAYVC,EAAAA,mBAAmB,EAAE,6BAAU5C,OAAV,EAAmB;AACpC,SAAK,IAAIwC,CAAC,GAAGxC,OAAO,CAACyC,UAAR,CAAmBC,MAAnB,GAA4B,CAAzC,EAA4CF,CAAC,IAAI,CAAjD,EAAoDA,CAAC,EAArD,EAAyD;AACrD,UAAMG,KAAK,GAAG3C,OAAO,CAACyC,UAAR,CAAmBD,CAAnB,CAAd;;AACA,UAAInB,YAAY,CAACsB,KAAD,CAAZ,IACA,KAAKC,mBAAL,CAAyBD,KAAzB,CADJ,EACqC;AACjC,eAAO,IAAP;AACH;AACJ;;AACD,WAAO,KAAP;AACH;AArBS,CAAd;AAwBA,eAAepB,KAAf;AACA,SAASpC,UAAT,EAAqBkC,YAArB,EAAmCR,WAAnC,EAAgDd,SAAhD,EAA2DS,0BAA3D,EAAuFqB,YAAvF","sourcesContent":["const EVENT_CODE = {\r\n    tab: 'Tab',\r\n    enter: 'Enter',\r\n    space: 'Space',\r\n    left: 'ArrowLeft',\r\n    up: 'ArrowUp',\r\n    right: 'ArrowRight',\r\n    down: 'ArrowDown',\r\n    esc: 'Escape',\r\n    delete: 'Delete',\r\n    backspace: 'Backspace',\r\n};\r\nconst FOCUSABLE_ELEMENT_SELECTORS = `a[href],button:not([disabled]),button:not([hidden]),:not([tabindex=\"-1\"]),input:not([disabled]),input:not([type=\"hidden\"]),select:not([disabled]),textarea:not([disabled])`;\r\nconst isVisible = (element) => {\r\n    if (process.env.NODE_ENV === 'test')\r\n        return true;\r\n    const computed = getComputedStyle(element);\r\n    return computed.position === 'fixed' ? false : element.offsetParent !== null;\r\n};\r\nconst obtainAllFocusableElements = (element) => {\r\n    return Array.from(element.querySelectorAll(FOCUSABLE_ELEMENT_SELECTORS)).filter(isFocusable)\r\n        .filter(isVisible);\r\n};\r\nconst isFocusable = (element) => {\r\n    if (element.tabIndex > 0 ||\r\n        (element.tabIndex === 0 && element.getAttribute('tabIndex') !== null)) {\r\n        return true;\r\n    }\r\n    if (element.disabled) {\r\n        return false;\r\n    }\r\n    switch (element.nodeName) {\r\n        case 'A': {\r\n            return !!element.href && element.rel !== 'ignore';\r\n        }\r\n        case 'INPUT': {\r\n            return !(element.type === 'hidden' || element.type === 'file');\r\n        }\r\n        case 'BUTTON':\r\n        case 'SELECT':\r\n        case 'TEXTAREA': {\r\n            return true;\r\n        }\r\n        default: {\r\n            return false;\r\n        }\r\n    }\r\n};\r\nconst attemptFocus = (element) => {\r\n    var _a;\r\n    if (!isFocusable(element)) {\r\n        return false;\r\n    }\r\n    Utils.IgnoreUtilFocusChanges = true;\r\n    (_a = element.focus) === null || _a === void 0 ? void 0 : _a.call(element);\r\n    Utils.IgnoreUtilFocusChanges = false;\r\n    return document.activeElement === element;\r\n};\r\nconst triggerEvent = function (elm, name, ...opts) {\r\n    let eventName;\r\n    if (name.includes('mouse') || name.includes('click')) {\r\n        eventName = 'MouseEvents';\r\n    }\r\n    else if (name.includes('key')) {\r\n        eventName = 'KeyboardEvent';\r\n    }\r\n    else {\r\n        eventName = 'HTMLEvents';\r\n    }\r\n    const evt = document.createEvent(eventName);\r\n    evt.initEvent(name, ...opts);\r\n    elm.dispatchEvent(evt);\r\n    return elm;\r\n};\r\nconst Utils = {\r\n    IgnoreUtilFocusChanges: false,\r\n    focusFirstDescendant: function (element) {\r\n        for (let i = 0; i < element.childNodes.length; i++) {\r\n            const child = element.childNodes[i];\r\n            if (attemptFocus(child) ||\r\n                this.focusFirstDescendant(child)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n    focusLastDescendant: function (element) {\r\n        for (let i = element.childNodes.length - 1; i >= 0; i--) {\r\n            const child = element.childNodes[i];\r\n            if (attemptFocus(child) ||\r\n                this.focusLastDescendant(child)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n};\n\nexport default Utils;\nexport { EVENT_CODE, attemptFocus, isFocusable, isVisible, obtainAllFocusableElements, triggerEvent };\n"]},"metadata":{},"sourceType":"module"}