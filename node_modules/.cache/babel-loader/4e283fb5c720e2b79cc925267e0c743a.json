{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { defineComponent, ref, toRef, watch, computed, openBlock, createBlock, renderSlot } from 'vue';\nvar ERROR_EVENT = \"error\";\nvar script = defineComponent({\n  name: \"ElAvatar\",\n  props: {\n    size: {\n      type: [Number, String],\n      validator: function validator(val) {\n        if (typeof val === \"string\") {\n          return [\"large\", \"medium\", \"small\"].includes(val);\n        }\n\n        return typeof val === \"number\";\n      },\n      default: \"large\"\n    },\n    shape: {\n      type: String,\n      default: \"circle\",\n      validator: function validator(val) {\n        return [\"circle\", \"square\"].includes(val);\n      }\n    },\n    icon: String,\n    src: {\n      type: String,\n      default: \"\"\n    },\n    alt: String,\n    srcSet: String,\n    fit: {\n      type: String,\n      default: \"cover\"\n    }\n  },\n  emits: [ERROR_EVENT],\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit;\n    var hasLoadError = ref(false);\n    var src = toRef(props, \"src\");\n    watch(src, function () {\n      hasLoadError.value = false;\n    });\n    var avatarClass = computed(function () {\n      var size = props.size,\n          icon = props.icon,\n          shape = props.shape;\n      var classList = [\"el-avatar\"];\n\n      if (size && typeof size === \"string\") {\n        classList.push(\"el-avatar--\".concat(size));\n      }\n\n      if (icon) {\n        classList.push(\"el-avatar--icon\");\n      }\n\n      if (shape) {\n        classList.push(\"el-avatar--\".concat(shape));\n      }\n\n      return classList;\n    });\n    var sizeStyle = computed(function () {\n      var size = props.size;\n      return typeof size === \"number\" ? {\n        height: \"\".concat(size, \"px\"),\n        width: \"\".concat(size, \"px\"),\n        lineHeight: \"\".concat(size, \"px\")\n      } : {};\n    });\n    var fitStyle = computed(function () {\n      return {\n        objectFit: props.fit\n      };\n    });\n\n    function handleError(e) {\n      hasLoadError.value = true;\n      emit(ERROR_EVENT, e);\n    }\n\n    return {\n      hasLoadError: hasLoadError,\n      avatarClass: avatarClass,\n      sizeStyle: sizeStyle,\n      handleError: handleError,\n      fitStyle: fitStyle\n    };\n  }\n});\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createBlock(\"span\", {\n    class: _ctx.avatarClass,\n    style: _ctx.sizeStyle\n  }, [(_ctx.src || _ctx.srcSet) && !_ctx.hasLoadError ? (openBlock(), createBlock(\"img\", {\n    key: 0,\n    src: _ctx.src,\n    alt: _ctx.alt,\n    srcset: _ctx.srcSet,\n    style: _ctx.fitStyle,\n    onError: _cache[1] || (_cache[1] = function () {\n      return _ctx.handleError && _ctx.handleError.apply(_ctx, arguments);\n    })\n  }, null, 44, [\"src\", \"alt\", \"srcset\"])) : _ctx.icon ? (openBlock(), createBlock(\"i\", {\n    key: 1,\n    class: _ctx.icon\n  }, null, 2)) : renderSlot(_ctx.$slots, \"default\", {\n    key: 2\n  })], 6);\n}\n\nscript.render = render;\nscript.__file = \"packages/avatar/src/index.vue\";\n\nscript.install = function (app) {\n  app.component(script.name, script);\n};\n\nvar _Avatar = script;\nexport default _Avatar;","map":{"version":3,"sources":["/Users/fabienne/studium/praxissemester/portfolio/fabienne.vatter/node_modules/element-plus/es/el-avatar/index.js"],"names":["defineComponent","ref","toRef","watch","computed","openBlock","createBlock","renderSlot","ERROR_EVENT","script","name","props","size","type","Number","String","validator","val","includes","default","shape","icon","src","alt","srcSet","fit","emits","setup","emit","hasLoadError","value","avatarClass","classList","push","sizeStyle","height","width","lineHeight","fitStyle","objectFit","handleError","e","render","_ctx","_cache","$props","$setup","$data","$options","class","style","key","srcset","onError","$slots","__file","install","app","component","_Avatar"],"mappings":"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","sourcesContent":["import { defineComponent, ref, toRef, watch, computed, openBlock, createBlock, renderSlot } from 'vue';\n\nconst ERROR_EVENT = \"error\";\nvar script = defineComponent({\n  name: \"ElAvatar\",\n  props: {\n    size: {\n      type: [Number, String],\n      validator(val) {\n        if (typeof val === \"string\") {\n          return [\"large\", \"medium\", \"small\"].includes(val);\n        }\n        return typeof val === \"number\";\n      },\n      default: \"large\"\n    },\n    shape: {\n      type: String,\n      default: \"circle\",\n      validator(val) {\n        return [\"circle\", \"square\"].includes(val);\n      }\n    },\n    icon: String,\n    src: {\n      type: String,\n      default: \"\"\n    },\n    alt: String,\n    srcSet: String,\n    fit: {\n      type: String,\n      default: \"cover\"\n    }\n  },\n  emits: [ERROR_EVENT],\n  setup(props, { emit }) {\n    const hasLoadError = ref(false);\n    const src = toRef(props, \"src\");\n    watch(src, () => {\n      hasLoadError.value = false;\n    });\n    const avatarClass = computed(() => {\n      const { size, icon, shape } = props;\n      const classList = [\"el-avatar\"];\n      if (size && typeof size === \"string\") {\n        classList.push(`el-avatar--${size}`);\n      }\n      if (icon) {\n        classList.push(\"el-avatar--icon\");\n      }\n      if (shape) {\n        classList.push(`el-avatar--${shape}`);\n      }\n      return classList;\n    });\n    const sizeStyle = computed(() => {\n      const { size } = props;\n      return typeof size === \"number\" ? {\n        height: `${size}px`,\n        width: `${size}px`,\n        lineHeight: `${size}px`\n      } : {};\n    });\n    const fitStyle = computed(() => ({\n      objectFit: props.fit\n    }));\n    function handleError(e) {\n      hasLoadError.value = true;\n      emit(ERROR_EVENT, e);\n    }\n    return {\n      hasLoadError,\n      avatarClass,\n      sizeStyle,\n      handleError,\n      fitStyle\n    };\n  }\n});\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createBlock(\"span\", {\n    class: _ctx.avatarClass,\n    style: _ctx.sizeStyle\n  }, [\n    (_ctx.src || _ctx.srcSet) && !_ctx.hasLoadError ? (openBlock(), createBlock(\"img\", {\n      key: 0,\n      src: _ctx.src,\n      alt: _ctx.alt,\n      srcset: _ctx.srcSet,\n      style: _ctx.fitStyle,\n      onError: _cache[1] || (_cache[1] = (...args) => _ctx.handleError && _ctx.handleError(...args))\n    }, null, 44, [\"src\", \"alt\", \"srcset\"])) : _ctx.icon ? (openBlock(), createBlock(\"i\", {\n      key: 1,\n      class: _ctx.icon\n    }, null, 2)) : renderSlot(_ctx.$slots, \"default\", { key: 2 })\n  ], 6);\n}\n\nscript.render = render;\nscript.__file = \"packages/avatar/src/index.vue\";\n\nscript.install = (app) => {\n  app.component(script.name, script);\n};\nconst _Avatar = script;\n\nexport default _Avatar;\n"]},"metadata":{},"sourceType":"module"}